{
    "openapi": "3.0.0",
    "changed":"asp",
  
    "info": {
      "title": "BLAZE BINARY MARKETDATA API"
    },
  
    "servers": [
      {
        "url": "https://ttblaze.iifl.com/apibinarymarketdata",
        "description": "Live Server"
      },
      {
        "url": "https://ttblaze.iifl.com/apibinarymarketdata",
        "description": "Sandbox Server"
      }
    ],
  
    "tags": [
  
      {"name": "Index",
      "description": "<ul><br/>
      <table>
          <tr>
            <th style='width: 10%'>Sr No.</th>
            <th style='width: 80%'>Table of Content</th>
          </tr>
  
          <tr>
            <td>1.</td>
            <td>User
              <ul>
                <li><a href='#tag/Auth/paths/~1auth~1login/post'>Login</a></li>
                <li><a href='#tag/Auth/paths/~1auth~1logout/delete'>Logout</a></li>
              </ul>
            </td>
          </tr>
  
          <tr>
            <td>2.</td>
            <td>ClientConfig
            <ul><li><a href='#tag/ClientConfig'>ClientConfig</a></li></ul>
            </td>
          </tr>
  
          <tr>
            <td>3.</td>
            <td>Instruments
            <ul>
            <li><a href='#tag/Instruments/paths/~1instruments~1quotes/post'>Quote</a></li>
            <li><a href='#tag/Instruments/paths/~1instruments~1subscription/post'>Subscription</a></li>
            <li><a href='#tag/Instruments/paths/~1instruments~1subscription/put'>UnSubscription</a></li>
            <li><a href='#tag/Instruments/paths/~1instruments~1master/post'>Master</a></li>
            <li><a href='#tag/Instruments/paths/~1instruments~1instrument~1series?exchangeSegment=1/get'>GetSeries</a></li>
            <li><a href='#tag/Instruments/paths/~1instruments~1instrument~1symbol?exchangeSegment=1&series=EQ&symbol=Acc/get'>GetEquitySymbol</a></li>
            <li><a href='#tag/Instruments/paths/~1instruments~1instrument~1expiryDate?exchangeSegment=2&series=FUTIDX&symbol=NIFTY/get'>GetExpiryDate</a></li>
            <li><a href='#tag/Instruments/paths/~1instruments~1instrument~1futureSymbol?exchangeSegment=2&series=FUTIDX&symbol=NIFTY&expiryDate=30Jan2025/get'>GetFutureSymbol</a></li>
            <li><a href='#tag/Instruments/paths/~1instruments~1instrument~1optionSymbol?exchangeSegment=2&series=OPTIDX&symbol=NIFTY&expiryDate=06Feb2025&optionType=CE&strikePrice=22500/get'>GetOptionSymbol</a></li>
            <li><a href='#tag/Instruments/paths/~1instruments~1instrument~1strikePrice?exchangeSegment=2&series=OPTIDX&symbol=NIFTY&expiryDate=30Jan2025&optionType=CE/get'>GetStikePrice</a></li>
            <li><a href='#tag/Instruments/paths/~1instruments~1instrument~1optionType?exchangeSegment=2&series=OPTIDX&symbol=NIFTY&expiryDate=30Jan2025/get'>GetOptionType</a></li>
            <li><a href='#tag/Instruments/paths/~1instruments~1indexlist?exchangeSegment=1/get'>IndexList</a></li>
            </ul>
            </td>
          </tr>
          <tr>
            <td>4.</td>
            <td>Search
            <ul>
            <li><a href='#tag/Search/paths/~1search~1instrumentsbyid/post'>Instruments By ID</a></li>
            <li><a href='#tag/Search/paths/~1search~1instruments~1?searchString=RELIANCE/get'>Instruments By Search String</a></li>
            </ul>
            </td>
          </tr>
          <tr>
            <td>5.</td>
            <td>OHLC
            <ul>
            <li><a href='#tag/OHLC'>OHLC</a></li>
            </ul>
            </td>
          </tr>
          <tr>
            <td>6.</td>
            <td>SocketIOStreaming
            <ul>
            <li><a href='#tag/Introduction'>Introduction</a></li>
            <li><a href='#tag/Binary-Data-Event'>Binary Data Event</a></li>
            </ul>
            </td>
          </tr>
          <tr>
            <td>7.</td>
            <td>Help
            <ul>
            <li><a href='#tag/FAQ'>FAQ</a></li>
            </ul>
            </td>
          </tr>
        </table>
        "
      },
      {"name": "Libraries and SDKs",
      "description": "Here is a list of pre-built client libraries and SDKs for Symphony API written in various languages that can be used used to interact with the APIs
        <ol>
        <li><strong>Symphony Python Library</strong>
        <ul><li>
        <a href=\"https://github.com/symphonyfintech/xts-pythonsdk-binarymarketdata-withbroadcastmode-api-sdk\">Python API SDK</a>
        </ul></li>
        </ol>"
      },
      {"name": "Getting Started",
        "description": "Binary Market Data is a mix of Restful API and socket.io streaming. It provides feed which helps in building a real time stock market platform. It is a robust platform providing real time feed with low latency and low bandwidth usage.
        <br/><br/><strong><font size='4px'>Obtaining Public key for API</font></strong><br/><br/>In order to gain access to XTS Binary MarketData API services you require a public key. To obtain a public key , you need to approach your broker's API dashboard page listed by him and register yourself as API user.<br/>
        On registering with the broker, you will get a verification link on email. You need to validate your email id by clicking on the link in the verification email. You will be directed to login page.<br/>
        On logging in to the API dashboard site, you can select trimmed Binary Marketdata API subscription and provide details as required for enabling the selected API service. Then wait for the approval email from the broker's support system.<br/>
        On successful approval, you will receive an email containing the appKey and secretKey to access API services.<br/>
        Keep a copy of your API service appkey and secretKey for each registered instance and retain the same for future use. Note that only one session is possible with a single appkey and secretKey combination, do not distribute the same to others. In case you feel that your keys are compromised, you can login into API dashboard with your credentials emailed to you and regenerate a new key and use it in your source code or settings.<br/>
        For getting instrumentIDs / Symbols refer to get/ masters.<br/>
        For knowing your userID and other Enums refer the result key of successful login json response.<br/>
        For Socket Streaming refer streaming topic ,the last chapter of this document.<br/><br/><br/>
  
        <strong><font size='4px'>Authorization</font></strong><br/><br/>
        For any api other than login, you need to provide authentication token in request header to receive response. Token is generated only after a valid user login and its valid only for defined period of time, after which token will be invalid/expired. Below is example given for key value pair for header request.
        <pre>
        Header: Content-Type: application/json<br/>
        authorization: eyJ1c2VySUQiOiJSVVBFU0giLCJpYXQiOjE1NTIxMjIwOTEsImV4cCI6MTU1MjIwODQ5MX0      
        </pre>"
      },
      {"name": "Introduction",
        "description": "In order to get streaming  Binary MarketData events, you need to use socket.io library. For more information you can visit : <code>https://socket.io/</code> .
        <br/><br/><strong><font size='4px'>Real time streaming flow</font></strong><br/>
        <p style='font-size: 12px'>Once the connection is established, real-time streaming can be obtained by listening to the socket on the relevant market data ports. You can get the related streaming data on those ports. As soon as the information is received you are free to do the processing you wish to do.<br/>
        Below are the steps you need to follow to achieve real time streaming flow properly:</p><br/><ul><li>Establishment of socket connection</li><li>Listening to real time streaming</li></ul>
        <br/><br/><strong><font size='4px'>Establishment of socket connection</font></strong><br/>
        <p style='font-size: 12px'>You can connect with the server by sending the userID, token, source & broadcastMode in the query parameters. The token will be available to you only after your restful login request become successful (as mentioned in the restful portion of the doc).<br/></p>
  
  
  
  
        <pre>
              import socketio<br/>
              <br/>
              url = \"https://ttblaze.iifl.com\"  # base url<br/>
              userID = \"\"<br/>
              token = \"\"<br/>
              broadcastMode = \"Full\"  # or \"Partial\"<br/>
              publishFormat = \"JSON\"<br/>
              socketio_path = \"/apibinarymarketdata/socketio\"<br/>
              logger = False  # or \"True\"<br/>
              <br/>
              sio = socketio.Client()<br/>
              connectionString = f\"{url}/?token={token}&userID={userID}&publishFormat={publishFormat}&broadcastMode={broadcastMode}\"<br/>
              <br/>
              @sio.on(\"connect\")<br/>
              def connect():<br/>
              &nbsp;&nbsp;print(\"Connection Established\")<br/>
              <br/>
              @sio.on(\"disconnect\")<br/>
              def disconnect():<br/>
              &nbsp;&nbsp;print(\"Disconnected\")<br/>
              <br/>
              @sio.on(\"joined\")<br/>
              def joined(data):<br/>
              &nbsp;&nbsp;print(\"Socket Joined\", data)<br/>
              <br/>
              @sio.on(\"error\")<br/>
              def error(data):<br/>
              &nbsp;&nbsp;print(\"Error\", data)<br/>
          </pre>
  
  
  
  
        <br/><br/><strong><font size='4px'>Listening to real time streaming</font></strong><br/>
        <p style='font-size: 12px'>Once the socket connection is established successfully, you can listen to the real time streaming by listening to the market data ports attached. You will get the entire market data in a string.<br/><p/>"
      },
  
      {"name": "Binary Data Event",
        "description": "
        Binary data event</p>
        <pre>
        @sio.on(\"xts-binary-packet\")<br/>
        def on_binary_full(data):<br/>
        &nbsp;&nbsp;print(\"Binary data Full:\", data)<br/>
        </pre><br/><br/>
    
        <b>Note</b>
        <ul>
        <li>If the packet is compressed then decompress using zlib and then deserialise the final packet.</li>
        <li>If packet is not compressed you can directly deserialise the packet.</li>
        <li>isGzipcompressed will be the parent header once received Final Packet need to be iterated.</li>
        <li>Depending on Message code deseralization should be considered further.</li>
        </ul>
  
        </br></br>
  
        <h3>Touchline Deserialize(1501-MessageCode)</h3>
          </br>
          <img src='asset/touchline.jpg' alt='Full Screen Image'>
            <table>
          <tr>
              <th>Name</th>
              <th>Size</th>
              <th>Offset</th>
              <th>Description</th>
          </tr>
          <tr>
              <td colspan='4' style='text-align: center;'>Header</td>
          </tr>
          <tr>
              <td>isGzipCompressed</td>
              <td>int8</td>
              <td>0-1</td>
              <td>Indicates if the data is gzip compressed</td>
          </tr>
          <tr>
              <td>Header MessageCode</td>
              <td>uint16</td>
              <td>1-3</td>
              <td>MessageCode</td>
          </tr>
          <tr>
              <td>Header ExchangeSegment</td>
              <td>int16</td>
              <td>3-5</td>
              <td>{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3,<br> \"BSECM\": 11, \"BSEFO\": 12, \"MCXFO\": 51}</td>
          </tr>
          <tr>
              <td>Header ExchangeInstrumentID</td>
              <td>int32</td>
              <td>5-9</td>
              <td>exchangeInstrumentID</td>
          </tr>
          <tr>
              <td>Header BookType</td>
              <td>int16</td>
              <td>9-11</td>
              <td>BookType</td>
          </tr>
          <tr>
              <td>XMarketType</td>
              <td>int16</td>
              <td>11-13</td>
              <td>XMarketType</td>
          </tr>
          <tr>
              <td>uncompressedPacketSize</td>
              <td>uint16</td>
              <td>13-15</td>
              <td>	size of uncompressed packet size</td>
          </tr>
          <tr>
              <td>compressedPacketSize</td>
              <td>uint16</td>
              <td>15-17</td>
              <td>	size of compressed packet size</td>
          </tr>
          <tr>
              <td>MessageCode</td>
              <td>uint16</td>
              <td>17-19</td>
             <td>1501-Touchline</br>1502-MarketDepth</br>1510-OpenInterest</br>1505-CandleData</td>
          </tr>
  
          <tr>
              <td colspan='4' style='text-align: center;'>Comman Data A</td>
          </tr>
          <tr>
              <td>MessageVersion</td>
              <td>uint16</td>
              <td>19-21</td>
              <td>MessageVersion</td>
          </tr>
          <tr>
              <td>ApplicationType</td>
              <td>uint16</td>
              <td>21-23</td>
              <td>ApplicationType</td>
          </tr>
          <tr>
              <td>TokenID</td>
              <td>uint64</td>
              <td>23-31</td>
              <td>TokenID</td>
          </tr>
          <tr>
              <td>SequenceNumber</td>
              <td>uint64</td>
              <td>31-39</td>
              <td>SequenceNumber</td>
          </tr>
          <tr>
              <td>SkipBytes</td>
              <td>int32</td>
              <td>39-43</td>
              <td>SkipBytes</td>
          </tr>
          <tr>
              <td>ExchangeSegment</td>
              <td>int16</td>
              <td>43-45</td>
              <td>{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3,<br> \"BSECM\": 11, \"BSEFO\": 12, \"MCXFO\": 51}</td>
          </tr>
          <tr>
              <td>ExchangeInstrumentID</td>
              <td>int32</td>
              <td>45-49</td>
              <td>ExchangeInstrumentId</td>
          </tr>
          <tr>
              <td>ExchangeTimeStamp</td>
              <td>uint64</td>
              <td>49-57</td>
              <td>ExchangeTimestamp</td>
          </tr>
  
          <tr>
              <td colspan='4' style='text-align: center;'>Touchline BidData A</td>
          </tr>
          <tr>
              <td>Size</td>
              <td>int32</td>
              <td>57-61</td>
              <td>Quantity</td>
          </tr>
          <tr>
              <td>Price</td>
              <td>double</td>
              <td>61-69</td>
              <td>Price at this row</td>
          </tr>
          <tr>
              <td>TotalOrders</td>
              <td>int32</td>
              <td>69-73</td>
              <td>TotalOrders</td>
          </tr>
          <tr>
              <td>BuyBackMarketMaker</td>
              <td>int16</td>
              <td>73-75</td>
              <td>BuyBackMarketMaker</td>
          </tr>
  
          <tr>
              <td colspan='4' style='text-align: center;'>Touchline AskData B</td>
          </tr>
          <tr>
              <td>Size</td>
              <td>int32</td>
              <td>75-79</td>
              <td>Quantity</td>
          </tr>
          <tr>
              <td>Price</td>
              <td>double</td>
              <td>79-87</td>
              <td>Price at this row</td>
          </tr>
          <tr>
              <td>TotalOrders</td>
              <td>int32</td>
              <td>87-91</td>
              <td>TotalOrders</td>
          </tr>
          <tr>
              <td>BackMarketMakerFlag</td>
              <td>int16</td>
              <td>91-93</td>
              <td>BackMarketMakerFlag</td>
          </tr>
  
          <tr>
              <td colspan='4' style='text-align: center;'>Comman Data B</td>
          </tr>
          <tr>
              <td>LastUpdateTime</td>
              <td>uint64</td>
              <td>93-101</td>
              <td>LastUpdateTime</td>
          </tr>
          <tr>
              <td>LastTradedPrice</td>
              <td>double</td>
              <td>101-109</td>
              <td>LastTradedPrice</td>
          </tr>
          <tr>
              <td>LastTradedQuantity</td>
              <td>int32</td>
              <td>109-113</td>
              <td>LastTradedQuantity</td>
          </tr>
          <tr>
              <td>TotalBuyQuantity</td>
              <td>uint32</td>
              <td>113-117</td>
              <td>TotalBuyQuantity</td>
          </tr>
          <tr>
              <td>TotalSellQuantity</td>
              <td>uint32</td>
              <td>117-121</td>
              <td>TotalSellQuantity</td>
          </tr>
          <tr>
              <td>TotalTradedQuantity</td>
              <td>uint32</td>
              <td>121-125</td>
              <td>TotalTradedQuantity</td>
          </tr>
          <tr>
              <td>AverageTradedPrice</td>
              <td>double</td>
              <td>125-133</td>
              <td>AverageTradedPrice</td>
          </tr>
          <tr>
              <td>LastTradedTime</td>
              <td>int64</td>
              <td>133-141</td>
              <td>LastTradedTime</td>
          </tr>
          <tr>
              <td>PercentChange</td>
              <td>double</td>
              <td>141-149</td>
              <td>PercentChange</td>
          </tr>
          <tr>
              <td>Open</td>
              <td>double</td>
              <td>149-157</td>
              <td>Open price</td>
          </tr>
          <tr>
              <td>High</td>
              <td>double</td>
              <td>157-165</td>
              <td>High price</td>
          </tr>
          <tr>
              <td>Low</td>
              <td>double</td>
              <td>165-173</td>
              <td>Low price</td>
          </tr>
          <tr>
              <td>close</td>
              <td>double</td>
              <td>173-181</td>
              <td>Close price</td>
          </tr>
          <tr>
              <td>TotalValueTraded</td>
              <td>double</td>
              <td>181-189</td>
              <td>TotalValueTraded</td>
          </tr>
          <tr>
              <td>BuyBackTotalBuy</td>
              <td>int16</td>
              <td>189-191</td>
              <td>BuyBackTotalBuy</td>
          </tr>
          <tr>
              <td>BuyBackTotalSell</td>
              <td>int16</td>
              <td>191-193</td>
              <td>BuyBackTotalSell</td>
          </tr>
          <tr>
              <td>BookType</td>
              <td>int16</td>
              <td>193-195</td>
              <td>BookType</td>
          </tr>
          <tr>
              <td>MarketType</td>
              <td>int16</td>
              <td>195-197</td>
              <td>MarketType</td>
          </tr>
      </table>
  
  
  
  
  
  
      </br>
      <h3>MarketDepth Deserialize(1502-MessageCode)</h3>
      </br>
      <img src='asset/md.jpg' alt='Full Screen Image'>
          <table>
  
          <tr>
              <th>Name</th>
              <th>Size</th>
              <th>Offset</th>
              <th>Description</th>
          </tr>
          <tr>
              <td colspan='4' style='text-align: center;'>Header</td>
          </tr>
          <tr>
              <td>isGzipCompressed</td>
              <td>int8</td>
              <td>0-1</td>
              <td>possible values (1/0) - 0 is for compressed and 1 is for uncompressed</td>
          </tr>
          <tr>
              <td>Header MessageCode</td>
              <td>uint16</td>
              <td>1-3</td>
              <td>1501-Touchline</br>1502-MarketDepth</br>1510-OpenInterest</br>1505-CandleData</td>
          </tr>
          <tr>
              <td>Header ExchangeSegment</td>
              <td>int16</td>
              <td>3-5</td>
              <td>{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3,<br> \"BSECM\": 11, \"BSEFO\": 12, \"MCXFO\": 51}</td>
          </tr>
          <tr>
              <td>Header ExchangeInstrumentID</td>
              <td>int32</td>
              <td>5-9</td>
              <td>exchangeInstrumentID</td>
          </tr>
          <tr>
              <td>Header BookType</td>
              <td>int16</td>
              <td>9-11</td>
              <td>BookType</td>
          </tr>
          <tr>
              <td>XMarketType</td>
              <td>int16</td>
              <td>11-13</td>
              <td>XMarketType</td>
          </tr>
          <tr>
              <td>uncompressedPacketSize</td>
              <td>uint16</td>
              <td>13-15</td>
              <td>size of uncompressed packet size</td>
          </tr>
          <tr>
              <td>compressedPacketSize</td>
              <td>uint16</td>
              <td>15-17</td>
              <td>size of compressed packet size</td>
          </tr>
          <tr>
              <td>MessageCode</td>
              <td>uint16</td>
              <td>17-19</td>
              <td>1501-Touchline</br>1502-MarketDepth</br>1510-OpenInterest</br>1505-CandleData</td>
          </tr>
  
          <tr>
              <td colspan='4' style='text-align: center;'>Comman Data A</td>
          </tr>
          <tr>
              <td>MessageVersion</td>
              <td>uint16</td>
              <td>19-21</td>
              <td>MessageVersion</td>
          </tr>
          <tr>
              <td>ApplicationType</td>
              <td>uint16</td>
              <td>21-23</td>
              <td>ApplicationType</td>
          </tr>
          <tr>
              <td>TokenID</td>
              <td>uint64</td>
              <td>23-31</td>
              <td>TokenID</td>
          </tr>
          <tr>
              <td>SequenceNumber</td>
              <td>uint64</td>
              <td>31-39</td>
              <td>SequenceNumber</td>
          </tr>
          <tr>
              <td>SkipBytes</td>
              <td>int32</td>
              <td>39-43</td>
              <td>SkipBytes</td>
          </tr>
          <tr>
              <td>ExchangeSegment</td>
              <td>int16</td>
              <td>43-45</td>
              <td>{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3,<br> \"BSECM\": 11, \"BSEFO\": 12, \"MCXFO\": 51}</td>
          </tr>
          <tr>
              <td>ExchangeInstrumentID</td>
              <td>int32</td>
              <td>45-49</td>
              <td>ExchangeInstrumentID</td>
          </tr>
          <tr>
              <td>ExchangeTimeStamp</td>
              <td>uint64</td>
              <td>49-57</td>
              <td>ExchangeTimeStamp</td>
          </tr>
          <tr>
              <td colspan='4' style='text-align: center;'>Marketdepth BidData (offset count 57-155)</td>
          </tr>
          <tr>
              <td>bidCount</td>
              <td>int32</td>
              <td>57-61</td>
              <td>Number of bid orders</td>
          </tr>
          <tr>
              <td>Size</td>
              <td>int32</td>
              <td></td>
              <td>Quantity</td>
          </tr>
          <tr>
              <td>Price</td>
              <td>double</td>
              <td></td>
              <td>Price at this row</td>
          </tr>
          <tr>
              <td>TotalOrders</td>
              <td>int32</td>
              <td></td>
              <td>TotalOrders</td>
          </tr>
          <tr>
              <td>BuyBackMarketMaker</td>
              <td>int16</td>
              <td></td>
              <td>BuyBackMarketMaker</td>
          </tr>
          <tr>
              <td colspan='4' style='text-align: center;'>Marketdepth AskData (offset count 151-245)</td>
          </tr>
          <tr>
              <td>askCount</td>
              <td>int32</td>
              <td>151-155</td>
              <td>Number of ask orders</td>
          </tr>
          <tr>
              <td>Size</td>
              <td>int32</td>
              <td></td>
              <td>Quantity</td>
          </tr>
          <tr>
              <td>Price</td>
              <td>double</td>
              <td></td>
              <td>Price at this row</td>
          </tr>
          <tr>
              <td>TotalOrders</td>
              <td>int32</td>
              <td></td>
              <td>TotalOrders</td>
          </tr>
          <tr>
              <td>BuyBackMarketMaker</td>
              <td>int16</td>
              <td></td>
              <td>Market maker indicator</td>
          </tr>
  
          <tr>
              <td colspan='4' style='text-align: center;'>Comman Data B</th>
          </tr>
          <tr>
              <td>LastUpdateTime</td>
              <td>uint64</td>
              <td>281-289</td>
              <td>LastUpdateTime</td>
          </tr>
          <tr>
              <td>LastTradedPrice</td>
              <td>double</td>
              <td>289-297</td>
              <td>Last traded price</td>
          </tr>
          <tr>
              <td>LastTradedQunatity</td>
              <td>int32</td>
              <td>297-301</td>
              <td>LastTradedQunatity</td>
          </tr>
          <tr>
              <td>TotalBuyQuantity</td>
              <td>uint32</td>
              <td>301-305</td>
              <td>Total buy quantity</td>
          </tr>
          <tr>
              <td>TotalSellQuantity</td>
              <td>uint32</td>
              <td>305-309</td>
              <td>Total sell quantity</td>
          </tr>
          <tr>
              <td>TotalTradedQuantity</td>
              <td>uint32</td>
              <td>309-313</td>
              <td>Total traded quantity</td>
          </tr>
          <tr>
              <td>AverageTradedPrice</td>
              <td>double</td>
              <td>313-321</td>
              <td>Average traded price</td>
          </tr>
          <tr>
              <td>LastTradedTime</td>
              <td>int64</td>
              <td>321-329</td>
              <td>LastTradedTime</td>
          </tr>
          <tr>
              <td>PercentChange</td>
              <td>double</td>
              <td>329-337</td>
              <td>PercentChange</td>
          </tr>
          <tr>
              <td>Open</td>
              <td>double</td>
              <td>337-345</td>
              <td>Open price</td>
          </tr>
          <tr>
              <td>High</td>
              <td>double</td>
              <td>345-353</td>
              <td>High price</td>
          </tr>
          <tr>
              <td>Low</td>
              <td>double</td>
              <td>353-361</td>
              <td>Low price</td>
          </tr>
          <tr>
              <td>Close</td>
              <td>double</td>
              <td>361-369</td>
              <td>Close price</td>
          </tr>
          <tr>
              <td>TotalValueTraded</td>
              <td>double</td>
              <td>369-377</td>
              <td>TotalValueTraded</td>
          </tr>
          <tr>
              <td>BuyBackTotalBuy</td>
              <td>int16</td>
              <td>377-379</td>
              <td>BuyBackTotalBuy</td>
          </tr>
          <tr>
              <td>BuyBackTotalSell</td>
              <td>int16</td>
              <td>379-381</td>
              <td>BuyBackTotalSell</td>
          </tr>
          <tr>
              <td>BookType</td>
              <td>int16</td>
              <td>381-383</td>
              <td>BookType</td>
          </tr>
          <tr>
              <td>XMarketType</td>
              <td>int16</td>
              <td>383-385</td>
              <td>XMarketType</td>
          </tr>
      </table>
  
  
  
  
  
  
  
        </br>
        <h3>Open Interest Deserialize(1510-MessageCode)</h3>
        <img src='asset/oi.jpg' alt='Full Screen Image'>
        <table>
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Size</th>
                    <th>Offset count</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td colspan='4' style='text-align: center;'>Headers</td>
                </tr>
                <tr>
                    <td>isGzipCompressed</td>
                    <td>int8</td>
                    <td>0-1</td>
                    <td>possible values (1/0) - 0 is for compressed and 1 is for uncompressed</td>
                </tr>
                <tr>
                    <td>Header messageCode</td>
                    <td>uint16</td>
                    <td>1-3</td>
                    <td>1501-Touchline</br>1502-MarketDepth</br>1510-OpenInterest</br>1505-CandleData</td>
                </tr>
                <tr>
                    <td>Header exchangeSegment</td>
                    <td>int16</td>
                    <td>3-5</td>
                    <td>{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3,<br> \"BSECM\": 11, \"BSEFO\": 12, \"MCXFO\": 51}</td>
                </tr>
                <tr>
                    <td>Header exchangeInstrumentID</td>
                    <td>int32</td>
                    <td>5-9</td>
                    <td>exchangeInstrumentID</td>
                </tr>
                <tr>
                    <td>bookType</td>
                    <td>int16</td>
                    <td>9-11</td>
                    <td>bookType</td>
                </tr>
                <tr>
                    <td>marketType</td>
                    <td>int16</td>
                    <td>11-13</td>
                    <td>marketType</td>
                </tr>
                <tr>
                    <td>uncompressedPacketSize</td>
                    <td>uint16</td>
                    <td>13-15</td>
                    <td>size of uncompressed packet size</td>
                </tr>
                <tr>
                    <td>compressedPacketSize</td>
                    <td>uint16</td>
                    <td>15-17</td>
                    <td>size of compressed packet size</td>
                </tr>
                <tr>
                    <td>messageCode</td>
                    <td>uint16</td>
                    <td>17-19</td>
                    <td>1501-Touchline</br>1502-MarketDepth</br>1510-OpenInterest</br>1505-CandleData</td>
                </tr>
                <tr>
                    <td colspan='4' style='text-align: center;'>OpenInterest packet deserialization</td>
                </tr>
                <tr>
                    <td>messageVersion</td>
                    <td>uint16</td>
                    <td>19-21</td>
                    <td>messageVersion</td>
                </tr>
                <tr>
                    <td>applicationType</td>
                    <td>uint16</td>
                    <td>21-23</td>
                    <td>applicationType</td>
                </tr>
                <tr>
                    <td>tokenID</td>
                    <td>uint64</td>
                    <td>23-31</td>
                    <td>tokenID</td>
                </tr>
                <tr>
                    <td>sequenceNumber</td>
                    <td>uint64</td>
                    <td>31-39</td>
                    <td>sequenceNumber</td>
                </tr>
                <tr>
                    <td>SkipBytes</td>
                    <td>int32</td>
                    <td>39-43</td>
                    <td>SkipBytes</td>
                </tr>
                <tr>
                    <td>exchangeSegment</td>
                    <td>int16</td>
                    <td>43-45</td>
                    <td>{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3,<br> \"BSECM\": 11, \"BSEFO\": 12, \"MCXFO\": 51}</td>
                </tr>
                <tr>
                    <td>exchangeInstrumentId</td>
                    <td>int32</td>
                    <td>45-49</td>
                    <td>exchangeInstrumentId</td>
                </tr>
                <tr>
                    <td>exchangeTimestamp</td>
                    <td>uint64</td>
                    <td>49-57</td>
                    <td>exchangeTimestamp</td>
                </tr>
                <tr>
                    <td>marketType</td>
                    <td>int16</td>
                    <td>57-59</td>
                    <td>marketType</td>
                </tr>
                <tr>
                    <td>openInterest</td>
                    <td>int32</td>
                    <td>59-63</td>
                    <td>openInterest</td>
                </tr>
                <tr>
                    <td>underlyingExchangeSegment</td>
                    <td>int16</td>
                    <td>63-65</td>
                    <td>underlyingExchangeSegment</td>
                </tr>
                <tr>
                    <td>underlyingInstrumentID</td>
                    <td>uint64</td>
                    <td>65-73</td>
                    <td>underlyingInstrumentID</td>
                </tr>
                <tr>
                    <td>isStringExits</td>
                    <td>int8</td>
                    <td>73-74</td>
                    <td>isStringExits</td>
                </tr>
                <tr>
                    <td>stringLength</td>
                    <td>int8</td>
                    <td>74-75</td>
                    <td>If isStringExits = 1, then get stringLength<br> and offset count += stringLength</td>
                </tr>
                <tr>
                    <td>underlyingTotalOpenInterest</td>
                    <td>int32</td>
                    <td></td>
                    <td>underlyingTotalOpenInterest</td>
                </tr>
            </tbody>
        </table>
  
  
  
        
        <p>Response to xts-binary-packet</p>
        <pre>
        <br/>
        b'\\x0b\\x00\\x01\\x00E\\x0b\\x00\\x007\\x01\\x00\\x00x\\xda\\x8d\\x91?KBQ\\x18\\xc6\\xdf{\\xad,\\xddw\\xbd\\xea~~\\x01\\xb8^Wx'
        </pre>"
      },
  
      {"name": "Candle Data Event",
        "description": "
      Candle Data Event message for JSON Full Packet</p>
      <pre>
      @sio.on(\"1505-json-full\")<br/>
      def on_1505_json_full(data):<br/>
      &nbsp;&nbsp;print(\"CandleData data Full:\", data)<br/>
      </pre><br/>
  
      <p>Response to 1505-json-full</p>
      <pre>
      {<br/>
        &nbsp;\"MessageCode\":1505,<br/>
        &nbsp;\"MessageVersion\":1,<br/>
      &nbsp;\"ApplicationType\":142,<br/>
        &nbsp;\"TokenID\":0,<br/>
        &nbsp;\"ExchangeSegment\":1,<br/>
        &nbsp;\"ExchangeInstrumentID\":2885,<br/>
      &nbsp;\"BarTime\":1737731759,<br/>
      &nbsp;\"BarVolume\":13161312,<br/>
        &nbsp;\"High\":1246.05,<br/>
      &nbsp;\"Low\":1245.5,<br/>
        &nbsp;\"Open\":1246,<br/>
      &nbsp;\"Close\":1245.95,<br/>
      &nbsp;\"OpenInterest\":0,<br/>
      &nbsp;\"SumOfQtyInToPrice\":0,<br/>
      }
      </pre>
  
    <br/><br/>Candle Data Event message for JSON Partial Packet</p>
    <pre>
    @sio.on(\"1505-json-partial\")<br/>
    def on_1505_json_partial(data):<br/>
    &nbsp;&nbsp;print(\"CandleData Partial:\", data)<br/>
    </pre><br/>
      <p>Response to 1505-json-partial</p>
      <pre>t:1_2885,o:1246,h:1246.05,l:1245.5,c:1245.95,bt:1737731759,bv:13161312,pv:0</pre>
      <br/><br/><br/>
      <table>
      <tr>
      <th>Symbol</th>
      <th>Explanation</th>
      </tr>
      <tr>
      <td>t</td>
      <td>Exchangesegment_instrumentID(exchange segment enum with underscore along with instumentID of the particular subscribed instrument)</td>
      </tr>
      <tr>
      <td>o</td>
      <td>Open</td>
      </tr> 
      <tr>
      <td>h</td>
      <td>High</td>
      </tr> 
      <tr>
      <td>l</td>
      <td>Low</td>
      </tr> 
      <tr>
      <td>c</td>
      <td>Close</td>
      </tr> 
      <tr>
      <td>bt</td>
      <td>Bar Time</td>
      </tr> 
      <tr>
      <td>bv</td>
      <td>Bar Volume</td>
      </tr> 
      <tr>
      <td>pv</td>
      <td>Sum of Quantity In Price</td>
      </tr> 
      </table>"
      },
  
      {"name": "FAQ",
        "description": "<b> Q1. Do we need to re login every day? </b><br/>
        Yes, you need to login every day, every time you start the application XTS API maintains session
    token for 24 hours OR until logout is call whichever is earlier. </br></br>
  
        <b>Q2. There would be unique token for each login?</b><br/>
    Yes, there will be a unique session token.   </br></br>
  
      <b>Q3. What are tokens? </b><br>
    Token is generated only after a valid user login and its valid only for defined period of time,
    after which token will be invalid/expired.
    For any API other than login, you need to provide authentication token in request header to
    receive response.    </br></br>
  
      <b>Q4. Can I use along with my Android App?</b><br>
    Yes, we can use API along with Android App. </br></br>
  
      <b>Q5. How can I fetch data on my application using token given to my client?</b><br>
    By creating a post back request using token received by client.</br></br>
  
      <b>Q6. Does this API support Multi client execution through a single login?</b><br>
    Yes, it will support Multi client account mapped to a dealer, only dealer can exercise Multi
    client using single login. </br></br>
  
      <b>Q7. Can cover order be placed using this API and how?</b><br>
    Yes, we can place cover order using this API. First, we need to login by user credentials, then
    using to unique session token and cover order details we can place cover order.</br></br>
  
      <b>Q8. can bracket order be placed using API?</b><br>
    No, we cannot place bracket order using API.</br></br>
  
      <b>Q9. Does API support Trailing SL?</b><br>
    No, this API does not support Trailing SL.</br></br>
  
  
      <b>Q10. Do I need to login to XTS if logged in to API?</b><br>
    Both login sessions maintained separately. So, if you logged in to API you can login to XTS if you
    want, but it is not mandatory.</br></br>
  
      <b>Q11. Will my XTS and API login credentials differ?</b><br>
    You may use same login credentials, but secret keys for API can be provided.</br></br>
  
      <b>Q12. After how many days will API password be required to reset?</b><br>
    You can reset API password any time, default reset will require after one month.</br></br>
  
      <b>Q13. Do we need to take Market Data from XTS server at IIFL only or i can use the same of any
    other 3rd party services provider?</b><br>
    Yes, you can take it from any third-party authorized vendor also. </br></br>
  
      <b>Q14. What is Github link for NodeJS sdk?</b><br>
      <a href='https://github.com/symphonyfintech'>NodeJS sdk</a> </br></br>
  
      <b>Q15. What order functions does the API support?</b><br>
    1. Place Order</br>
    2. Modify Order</br>
    3. Cancel Order</br>
    4. Place Cover Order</br>
    5. Exit Cover Order</br>
    6. Order Book</br>
    7. Order History</br></br>
  
      <b>Q16. what are order types does the API support?</b><br>
    1. Market Order</br>
    2. Limit Order</br>
    3. Stop Limit Order</br>
    4. Stop Market Order</br>
    5. Cover Order</br></br>
  
      <b>Q17. If the internet goes down, do I need to relogin or will it reconnect by itself once connectivity
    is back?</b><br>
    Yes, you need to re login, as if internet goes down you will get logout.</br></br>
  
      <b>Q18. Can we convert product type from MIS to NRML and vice versa (I.e. Delivery marking)</b><br>
    Yes, we can convert.</br></br>
  
      <b>Q19. Can Market data be used for any application or only on XTS REST API?</b><br>
    No, Market data can be use only on XTS REST API </br></br>
  
      <b>Q20. What is XTS Trading API?</b><br>
    Trading APIs allows to integrate your own trading system with XTS Trading Platform for placing orders and other account information.</br></br>
  
      <b>Q21. What is XTS Market Data API?</b><br>
    Market Data API is a mixed HTTP REST and HTTP streaming Protocol contract. It provides access to live quotes data on a wide range of symbols, Exchange and segments.</br></br>
  
  
  
      <b>Q22. Can I write trading strategy Algo using XTS APIs?</b><br>
    You need domain knowledge, skilled resources, technology & infrastructure in the form of hardware and right trading platform and compatible APIs for starting with Strategy based Algo trading.</br></br>
  
      <b>Q23. what are the hardware and infrastructure requirements to start using XTS APIs?</b><br>
    To start using XTS APIs one needs a sufficiently well performing Laptop or desktop with quad core CPU and 8 GB RAM, e.g. Intel i3 processor etc. You would also need a stable internet connection with minimum of 1 Mbps speed at least for limited number of symbols.</br></br>
  
      <b>Q24. What are the operating system requirements to use XTS Frontend API?</b><br>
    You can use Ubuntu 16.04, RHEL 7.5, other Debian, Fedora versions with Python 3.7 for Python APIs, NodeJS. You may use Windows 7 Ultimate and later for C# APIs.</br></br>
  
      <b>Q25. I am getting invalid Credentials!!?</b><br>
    You are either providing incorrect USER ID or password or Interactive Key assigned to you.</br></br>
  
      <b>Q26. I am facing invalid session or unrecognized token/system or session not found?</b><br>
    This is because you are not sending valid token you have received in login response in all subsequent message headers. You can call logout or force disconnect application and re-login to fetch valid token and monitor its usage by adding sufficient logs.</br></br>
  
      <b>Q27. What does NRML, MIS and CNC product type?</b><br>
    NRML - Normal, it means you can carry forward positions.<br>
    MIS - stands for Margin Intraday Square Off, user needs to square off compulsorily before end of trading session.<br>
    CNC - stands for Cash and Carry, it is used for trading in equities and tangible instruments/asset class.</br></br>
  
      <b>Q28. what is CO order type?</b><br>
    CO stands for Cover Order, XTS has normal HIGH leverage cover order but has some restriction like compulsory stop loss, stop loss must be within 3% of execution price, primary order must be market order.</br></br>
  
      <b>Q29. what is the difference between Day wise position and Net wise Position?</b><br>
    Day wise position shows open positions of instruments one has traded during the current trading session, Net wise position shows all open position one has accumulated in futures/options across trading days until the expiry of contracts.</br></br>
  
      <b>Q30. I am getting User data not found?</b><br>
    You are either providing invalid USER ID or Binary Marketdata Key.</br></br>
  
      <b>Q31. I am getting invalid Credentials!!?</b><br>
    You are either providing invalid USER ID or password.</br></br>
  
      <b>Q32. My subscription limit is 1000 but none of the symbol I send in a list of 1500 got subscribed, what could be the reason?</b><br>
    Our server validates your limits before subscribing therefore when you send a list of instruments that exceed the limit, your request does not reach the data server and hence no feed or response.</br></br>
  
      <b>Q33. Do I need to always subscribe to list of symbols?</b><br>
    You always need to send a list of instruments to subscribe; but that list can have only one instrument and you can subscribe single instrument until you exhaust your subscription limit.</br></br>
  
      <b>Q34. Where do I find the Master List of all instruments?</b><br>
    You can get master list by sending POST JSON request to http: //ip:port/apibinarymarketdata/instruments/master, with the body containing an array of segments. E.g.{[NSECM,NSEFO]}. </br></br>
  
      <b>Q35. How do I parse Equity instruments from Master data response?</b><br>
    Each pipe separated line in response starting with NSECM should be tokenized according to the given header ExchangeSegment|ExchangeInstrumentID|InstrumentType|Name|Description|Series|NameWi thSeries|InstrumentID|PriceBand.High|PriceBand.Low|FreezeQty|TickSize|LotSize.</br></br>
  
      <b>Q36. How do I parse FO instruments from Master data response?</b><br>
    Each pipe separated line in response starting with NSEFO should be tokenized according to the given header ExchangeSegment|ExchangeInstrumentID|InstrumentType|Name|Description|Series|NameWi thSeries|InstrumentID|PriceBand.High|PriceBand.Low|FreezeQty|TickSize|LotSize|UnderlyingI nstrumentId|UnderlyingIndexName|ContractExpiration|StrikePrice|OptionType.</br></br>
  
      <b>Q37. XTS API Documentations Links </b><br>
    Interactive API Document:</br>
    https://ttblaze.iifl.com/doc/interactive </br>
    BinaryMarket Data API Document: </br>
    https://ttblaze.iifl.com/doc/marketdata  </br></br>
  
    <b>Q38. what are the technical skills required to use XTS APIs?</b><br>
    Any person with trading domain knowledge along quant knowledge or data analysis skill can start using API in SDK format with little bit scripting knowledge in Python, JavaScript (NodeJS). And persons with advanced skills in C# or Java can write fairly complex systems and Front-ends using XTS APIs.</br></br>
  
    <b>Q39.Can apibinarymarketdata be used receiving feed for multiple instruments and / or application instances </b><br>
    In cases where the API user is consuming the market data  for receiving the feed for multiple instruments and / or application instances, it is recommended that a socket (to market data API) middleware is created that will maintain the union profile of subscription across all application instances. This middleware will receive the feed over a single socket channel to the market data API server and will then distribute the same to the internal subscribed instances.</br>
    In case the middleware design needs horizontal scaling where a large number of application instances need feed, multiple instances of market data API user / server may have to be procured at additional cost. </br></br>
        " 
      },
  
      {
        "name": "Auth",
        "description": ""
      },
      {
        "name": "ClientConfig",
        "description": "You can get the configuration information of the client by using post <code>/config/client</code> request. You will be getting the configuration information in the response. As of now we are sending the enums related to exchangesegments and messageCodes"
      },
      {
        "name": "Instruments",
        "description": ""
      },
      {
        "name": "Search",
        "description": ""
      }
    ],
  
    "x-tagGroups": [
      {
        "name": "Introduction",
        "tags": [
          "Index",
          "Getting Started",
          "Libraries and SDKs"
        ]
      },
      {
        "name": "API",
        "tags": [
          "Auth",
          "ClientConfig",
          "Instruments",
          "Search",
          "OHLC"
        ]
      },
      {
        "name": "SocketIO Streaming",
        "tags": [
          "Introduction",
          "Binary Data Event",
          "Candle Data Event"
        ]
      },
      {
          "name": "Help",
          "tags": [
            "FAQ"
          ]
      }
    ],
  
    "paths": {
      "/auth/login": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "Login",
          "description": "You can login to the application by using POST <code>/auth/login</code> request.  You will be getting the token parameter in the response which will be used in the subsequent requests.All request bodies should have content type application/json and should be valid JSON.",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [                  
                    {
                      "$ref": "#/components/schemas/LoginBody"
                    }
                  ]
                }
              }
            }},
          "responses": {
            "200": {
              "description": "User was logged in successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UserLogin"
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            }
          }
        }
      },
      
      "/auth/logout": {
        "delete": {
          "tags": [
            "Auth"
          ],
          "summary": "Logout",
          "description": "You can logout of the application by using post <code>/auth/logout</code> request.You need to pass authorization or token to the request. You will be getting the successful error code in the response.",
          ,
          "responses": {
            "200": {
              "description": "User was logged in successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UserLogout"
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            }
          }
        }
      },
      "/config/clientConfig": {
        "get": {
          "tags": [
            "ClientConfig"
          ],
          "summary": "ClientConfig",
          "description": "Following are the exchangesegments and messageCodes maintained at our application level:<br/>exchangeSegments:-{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3, \"BSECM\": 11, \"BSEFO\": 12},<br/>messageCode:- {\"touchlineEvent\": 1501, \"marketDepthEvent\": 1502, \"candleDataEvent\": 1505, \"OIDataEvent\": 1510}. You need to pass authorization or token to the request.<br/><br/>Note:-Calling of this API is optional.",
  
          "responses": {
            "200": {
              "description": "User was logged in successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/clientConfig"
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            }
          }
        }
      },
      "/instruments/quotes": {
        "post": {
          "tags": [
            "Instruments"
          ],
          "summary": "Quote",
          "description": "You can fetch the quote details by using post <code>/instruments/quotes</code> request. In response you will be getting the quote details depending on the
          exchangeSegment with instrumentID along with the publishFormat you have sent in the request.Request body should have content type application/json and should be valid JSON.",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [                  
                    {
                      "$ref": "#/components/schemas/QuoteBody"
                    }
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User was logged in successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/quote"
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            }
          }
        }
      },
      "/instruments/subscription": {
        "post": {
          "tags": [
            "Instruments"
          ],
          "summary": "Subscription",
          "description": "You can subscribe to the instruments by using post <code>/instruments/subscription</code> request. In response you will be getting the binary market data event you have subscribed along with the list of instruments you have subscribed for that particular event.Request body should have content type application/json and should be valid JSON.",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [                  
                    {
                      "$ref": "#/components/schemas/SubscriptionBody"
                    }
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User was logged in successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/subscription"
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            }
          }
        },
        "put": {
          "tags": [
            "Instruments"
          ],
          "summary": "Unsubscription",
          "description": "You can unsubscribe to the instruments by using PUT <code>/instruments/subscription</code>  request. In response you will be getting the market data events you wanted unsubscribe along with the list of instruments you have unsubscribed successfully for that particular market data event.Request body should have content type application/json and should be valid JSON.",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [                  
                    {
                      "$ref": "#/components/schemas/UnsubscriptionBody"
                    }
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User was logged in successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/unsubscription"
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            }
          }
        }      
      },
      "/instruments/master": {
        "post": {
          "tags": [
            "Instruments"
          ],
          "summary": "Master",
          "description": "XTS provides you API Call to fetch all tradable as well as some additional Instrument/contract masters in a single structure. This call can be made once in a day and the response can be persisted in local storage or file as per you application design and you can fetch instrumented or Symbols from this dataset throughout the day.
          The structure of the response is as follows, you can tokenise the pipe and line separated values easily and bulk loads it into your storage of choice: </br> </br> </br>
  
          <strong><font size='4px'>Terminalogy</font></strong><br/><br/>
          <b>If InstrumentType is Equities enums value then use below header format:</b></br>
          ExchangeSegment|ExchangeInstrumentID|InstrumentType|Name|Description|Series| NameWithSeries|InstrumentID|PriceBand.High|PriceBand.Low| FreezeQty|TickSize|LotSize|Multiplier|DisplayName|ISIN|PriceNumerator|PriceDenominator|
          </br>DetailedDescription|ExtendedSurvIndicator|CautionIndicator|GSMIndicator</br></br>
          Example:- </br>
          NSECM|22|8|ACC|ACC-EQ|EQ|ACC-EQ|1100100000022|2157.3|1765.1|50890|0.05|1|1|ACC|IN3420220177|1|1|ACC|1|0|1
          </br></br>
          <b>If InstrumentType is Futures, Options & Spread enums value then use below header format</b></br> </br> 
          ExchangeSegment|ExchangeInstrumentID|InstrumentType|Name|Description|Series| NameWithSeries|InstrumentID|PriceBand.High|PriceBand.Low|FreezeQty|TickSize|LotSize|
          </br>Multiplier|UnderlyingInstrumentId|UnderlyingIndexName|ContractExpiration|StrikePrice|
          </br>OptionType|DisplayName| PriceNumerator|PriceDenominator|DetailedDescription<br/>
          
          </br>
          Example:- </br>
          NSEFO|61211|1|NIFTY|NIFTY21MAYFUT|FUTIDX|NIFTY-FUTIDX|2114700061211|16739.8|13696.2|5001|0.05|75|1|-1|Nifty 50|2021-05-27T14:30:00|NIFTY-FUTIDX|1|1|NIFTY
          This call helps you to speed up you lookup time and coding overheads in implementing search APIs.Request body should have content type application/json and should be valid JSON.<br/> <br/>",
  
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [                  
                    {
                      "$ref": "#/components/schemas/masterBody"
                    }
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Data found successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/masterResponse"
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            },
  
          }
        }
      },
      "/search/instrumentsbyid": {
        "post": {
          "tags": [
            "Search"
          ],
          "summary": "Instruments By ID",
          "description": "You can search for the instruments by using POST <code>/search/instrumentsbyid</code> request.In response you will be receiving the instruments you searched based on the instrumentID you have sent in the request.Request body should have content type application/json and should be valid JSON.",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [                  
                    {
                      "$ref": "#/components/schemas/InstrumentsByIDBody"
                    }
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User was logged in successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/InstrumentsByID"
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            }
          }
        }
      },
      "/search/instruments/?searchString=RELIANCE": {
        "get": {
          "tags": [
            "Search"
          ],
          "summary": "Instruments By Search String",
          "description": "You can search for the instruments by using GET <code>/search/instruments</code> request.In response you will be receiving the instruments you searched based on the searchString you have sent in the request.",
          "parameters":[
            {
              "name":"searchString",
              "in":"path",
              "description": "",
              "required":true,
              "schema":{
                "type":"string",
                "default": "RELIANCE"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User was logged in successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SearchInstrument"
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            }
          }
        }
      },
      "/instruments/instrument/series?exchangeSegment=1": {
        "get": {
          "tags": [
            "Instruments"
          ],
          "summary": "GetSeries",
          "description": "You can search for the series by using GET <code>/instruments/instrument/series</code> request.In response you will be receiving the series you searched based on the exchangeSegment you have sent in the request.",
          "parameters":[
            {
              "name":"exchangeSegment",
              "in":"path",
              "description": "{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3,\"BSECM\": 11, \"BSEFO\": 12} It is segment, which represents cash, derivative, commodity or currency market.",
              "required":true,
              "schema":{
                "type":"integer",
                "default": 1
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Data found successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SearchSeries"
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/DataBadRequest"
            }
          }
        }
      },
      "/instruments/instrument/symbol?exchangeSegment=1&series=EQ&symbol=Acc": {
        "get": {
          "tags": [
            "Instruments"
          ],
          "summary": "GetEquitySymbol",
          "description": "You can search for the equity symbol by using GET <code>/instruments/instrument/symbol</code> request.In response you will be receiving the equity symbol information you searched based on the exchangeSegment,series and symbol you have sent in the request.",
          "parameters":[
            {
              "name":"exchangeSegment",
              "in":"path",
              "description": "{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3,\"BSECM\": 11, \"BSEFO\": 12, \"MCXFO\": 51} It is segment, which represents cash, derivative, commodity or currency market.",
              "required":true,
              "schema":{
                "type":"integer",
                "default": 1
              }
            },
            {
              "name":"series",
              "in":"path",
              "description": "",
              "required":true,
              "schema":{
                "type":"string",
                "default": "EQ"
              }
            },
            {
              "name":"symbol",
              "in":"path",
              "description": "",
              "required":true,
              "schema":{
                "type":"string",
                "default": "Acc"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Data found successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SearchEquitySymbol"
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/DataBadRequest"
            }
          }
        }
      },
      "/instruments/instrument/expiryDate?exchangeSegment=2&series=FUTIDX&symbol=NIFTY": {
        "get": {
          "tags": [
            "Instruments"
          ],
          "summary": "GetExpiryDate",
          "description": "You can search for the expiry date  by using GET <code>/instruments/instrument/expiryDate</code> request.In response you will be receiving the expiry date  you searched based on the exchangeSegment,series and symbol you have sent in the request.",
          "parameters":[
            {
              "name":"exchangeSegment",
              "in":"path",
              "description": "{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3,\"BSECM\": 11, \"BSEFO\": 12, \"MCXFO\": 51} It is segment, which represents cash, derivative, commodity or currency market.",
              "required":true,
              "schema":{
                "type":"integer",
                "default": 2
              }
            },
            {
              "name":"series",
              "in":"path",
              "description": "",
              "required":true,
              "schema":{
                "type":"string",
                "default": "FUTIDX"
              }
            },
            {
              "name":"symbol",
              "in":"path",
              "description": "",
              "required":true,
              "schema":{
                "type":"string",
                "default": "NIFTY"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Data found successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SearchExpiryDate"
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/DataBadRequest"
            }
          }
        }
      },
      "/instruments/instrument/futureSymbol?exchangeSegment=2&series=FUTIDX&symbol=NIFTY&expiryDate=30Jan2025": {
        "get": {
          "tags": [
            "Instruments"
          ],
          "summary": "GetFutureSymbol",
          "description": "You can search for the future symbol by using GET <code>/instruments/instrument/futureSymbol</code> request.In response you will be receiving the future symbol  you searched based on the exchangeSegment,series,symbol and expiryDate you have sent in the request.",
          "parameters":[
            {
              "name":"exchangeSegment",
              "in":"path",
              "description": "{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3,\"BSECM\": 11, \"BSEFO\": 12, \"MCXFO\": 51} It is segment, which represents cash, derivative, commodity or currency market.",
              "required":true,
              "schema":{
                "type":"integer",
                "default": 2
              }
            },
            {
              "name":"series",
              "in":"path",
              "description": "",
              "required":true,
              "schema":{
                "type":"string",
                "default": "FUTIDX"
              }
            },
            {
              "name":"symbol",
              "in":"path",
              "description": "",
              "required":true,
              "schema":{
                "type":"string",
                "default": "NIFTY"
              }
            },
            {
              "name":"expiryDate",
              "in":"path",
              "description": "",
              "required":true,
              "schema":{
                "type":"string",
                "default": "30Jan2025"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Data found successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SearchFutureSymbol"
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/DataBadRequest"
            }
          }
        }
      },
      "/instruments/instrument/optionSymbol?exchangeSegment=2&series=OPTIDX&symbol=NIFTY&expiryDate=06Feb2025&optionType=CE&strikePrice=22500": {
        "get": {
          "tags": [
            "Instruments"
          ],
          "summary": "GetOptionSymbol",
          "description": "You can search for the option symbol by using GET <code>/instruments/instrument/optionSymbol</code> request.In response you will be receiving the option symbol  you searched based on the exchangeSegment,series,symbol,expiryDate,optionType and strikePrice you have sent in the request.",
          "parameters":[
            {
              "name":"exchangeSegment",
              "in":"path",
              "description": "{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3,\"BSECM\": 11, \"BSEFO\": 12, \"MCXFO\": 51} It is segment, which represents cash, derivative, commodity or currency market.",
              "required":true,
              "schema":{
                "type":"integer",
                "default": 2
              }
            },
            {
              "name":"series",
              "in":"path",
              "description": "",
              "required":true,
              "schema":{
                "type":"string",
                "default": "OPTIDX"
              }
            },
            {
              "name":"symbol",
              "in":"path",
              "description": "",
              "required":true,
              "schema":{
                "type":"string",
                "default": "NIFTY"
              }
            },
            {
              "name":"expiryDate",
              "in":"path",
              "description": "",
              "required":true,
              "schema":{
                "type":"string",
                "default": "06Feb2025"
              }
            },
            {
              "name":"optionType",
              "in":"path",
              "description": "",
              "required":true,
              "schema":{
                "type":"string",
                "default": "CE"
              }
            },
            {
              "name":"strikePrice",
              "in":"path",
              "description": "",
              "required":true,
              "schema":{
                "type":"integer",
                "default": 22500
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Data found successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SearchOptionSymbol"
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/DataBadRequest"
            }
          }
        }
      },
     "/instruments/instrument/strikePrice?exchangeSegment=2&series=OPTIDX&symbol=NIFTY&expiryDate=30Jan2025&optionType=CE": {
        "get": {
          "tags": [
            "Instruments"
          ],
          "summary": "GetStikePrice",
          "description": "You can search for the strike prices by using GET <code>/instruments/instrument/strikePrice</code> request.In response you will be receiving all the strikeprice for the searched symbol and expiry.",
          "parameters":[
            {
              "name":"exchangeSegment",
              "in":"path",
              "description": "{ \"NSEFO\": 2,  \"BSEFO\": 12} It is segment, which represents derivative.",
              "required":true,
              "schema":{
                "type":"integer",
                "default": 2
              }
            },
            {
              "name":"series",
              "in":"path",
              "description": "",
              "required":true,
              "schema":{
                "type":"string",
                "default": "OPTIDX"
              }
            },
            {
              "name":"symbol",
              "in":"path",
              "description": "",
              "required":true,
              "schema":{
                "type":"string",
                "default": "NIFTY"
              }
            },
            {
              "name":"expiryDate",
              "in":"path",
              "description": "",
              "required":true,
              "schema":{
                "type":"string",
                "default": "30Jan2025"
              }
            },
            {
              "name":"optionType",
              "in":"path",
              "description": "",
              "required":true,
              "schema":{
                "type":"string",
                "default": "CE"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Data found successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SearchStrike"
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/DataBadRequest"
            }
          }
        }
      },
      "/instruments/instrument/optionType?exchangeSegment=2&series=OPTIDX&symbol=NIFTY&expiryDate=30Jan2025": {
        "get": {
          "tags": [
            "Instruments"
          ],
          "summary": "GetOptionType",
          "description": "You can search for the option type by using GET <code>/instruments/instrument/optionType</code> request.In response you will be receiving the option symbol  you searched based on the exchangeSegment,series,symbol and expiryDate you have sent in the request.",
          "parameters":[
            {
              "name":"exchangeSegment",
              "in":"path",
              "description": "{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3,\"BSECM\": 11, \"BSEFO\": 12, \"MCXFO\": 51} It is segment, which represents cash, derivative, commodity or currency market.",
              "required":true,
              "schema":{
                "type":"integer",
                "default": 2
              }
            },
            {
              "name":"series",
              "in":"path",
              "description": "",
              "required":true,
              "schema":{
                "type":"string",
                "default": "OPTIDX"
              }
            },
            {
              "name":"symbol",
              "in":"path",
              "description": "",
              "required":true,
              "schema":{
                "type":"string",
                "default": "NIFTY"
              }
            },
            {
              "name":"expiryDate",
              "in":"path",
              "description": "",
              "required":true,
              "schema":{
                "type":"string",
                "default": "30Jan2025"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Data found successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SearchOptionType"
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/DataBadRequest"
            }
          }
        }
      },
      "/instruments/indexlist?exchangeSegment=1": {
        "get": {
          "tags": [
            "Instruments"
          ],
          "summary": "IndexList",
          "description": "You can GET the list of index  <code>/instruments/indexlist</code> request.In response name of all index list belongs to exchange segment",
          "parameters":[
            {
              "name":"exchangeSegment",
              "in":"path",
              "description": "{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3,\"BSECM\": 11, \"BSEFO\": 12, \"MCXFO\": 51} It is segment, which represents cash, derivative, commodity or currency market.",
              "required":true,
              "schema":{
                "type":"integer",
                "default": 1
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Index List successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/IndexList"
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/DataBadRequest"
            }
          }
        }
      },
  
      "/instruments/ohlc?exchangeSegment=1&exchangeInstrumentID=2885&startTime=Jan 27 2025 090000&endTime=Jan 28 2025 153000&compressionValue=D": {
        "get": {
          "tags": [
            "OHLC"
          ],
          "summary": "Intraday Candle OHLC",
          "description": "The XTS Front-end  API provides intraday archived candle data for up to 7 days from the date of access for Equity and FO segments of NSE .The data is available in the form of a candle (Timestamp with epoch from 1970, Open, High, Low, Close, Volume, OI. The least compression available is 60(1 minute) for both event stream and long polling (GET at 1 Request Per Second). Other supported  intervals for GET (long polling ) Request are —2 minute, 3 minutes, 5 minutes,15 minutes, 30 minutes ,  hourly and daily.",
          "parameters":[
            {
              "name":"exchangeSegment",
              "in":"path",
              "description": "Possible values NSECM,NSEFO",
              "required":true,
              "schema":{
                "type":"string",
                "default": "NSECM"
  
              }
            },
            {
              "name":"exchangeInstrumentID",
              "in":"path",
              "description": "Possible values 22,45406 for stocks and derivatives and ”NIFTY 50” ,”NIFTY BANK” for indices",
              "required":true,
              "schema":{
                "type":"integer",
                "default": 28
              }
            },
            {
              "name":"startTime",
              "in":"path",
              "description": "Format: MMM DD YYYY HHMMSS",
              "required":true,
              "schema":{
                "type":"date",
                "default": "Jan 27 2025 090000"
              }
            },
            {
              "name":"endTime",
              "in":"path",
              "description": "Format: MMM DD YYYY HHMMSS",
              "required":true,
              "schema":{
                "type":"date",
                "default": "Jan 28 2025 153000"
              }
            },
            {
              "name":"compressionValue",
              "in":"path",
              "description": "",
              "required":true,
              "schema":{
                "type":"string",
                "default": "D",
                "enum": [
                  "In1Second:1",
                  "In1Minute: 60",
                  "In2Minute : 120",
                  "In3Minute : 180",
                  "In5Minute : 300",
                  "In10Minute : 600",
                  "In15Minute : 900",
                  "In30Minute : 1800",
                  "In60Minute : 3600",
                ]
              }
            },
  
  
          ],
          "responses": {
            "200": {
              "description": "User was logged in successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/OHLC"
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            }
          }
        }
      }
    },
  
    "components": {
      "schemas": {
        "OHLC":{
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
            "type": {
              "$ref": "#/components/headers/Response-Type"
            },
            "code": {
              "description": "code",
              "type": "string",
              "default":"s-ohlc-0001"
            },
            "description": {
              "description": "Get Ohlc successfully",
              "type": "string",
              "default":"Data found"
            },
            "result": {
              "properties": {
                "exchangeSegment":{
                  "type": "string",
                  "description": "",
                  "default":"NSECM"
                },
           "exchangeInstrumentID":{
                  "type": "string",
                  "description": "",
                  "default":"22"
                },
           "dataReponse":{
                  "type": "string",
                  "description":"",
                  "default":"1737331200|1316|1316|1300.25|1305.45|14040244|0|"
  
  
  
                }
  
              }
            }
          }
        },
        "SearchInstrument":{
          "type": "object",
          "required": [
            "token","source"
          ],
          "properties": {
            "type": {
              "$ref": "#/components/headers/Response-Type"
            },
  
            "code": {
              "$ref": "#/components/headers/Response-Code"
            },
            "description": {
              "description": "Record Found",
              "type": "string",
              "default":"Record Found"
            },
            "result": {
              "properties": {
                "ExchangeSegment":{
                  "type": "integer",
                  "description": "",
                  "default":12
                },
                "ExchangeInstrumentID":{
                  "type": "integer",
                  "description": "",
                  "default":17578420
                },
                "InstrumentType":{
                  "type": "integer",
                  "description": "",
                  "default":4
                },
                "Name":{
                  "type": "string",
                  "description": "",
                  "default":"RELIFUT"
                },
                "DisplayName":{
                  "type": "string",
                  "description": "",
                  "default":"RELIFUT SPD"
                },
                "Description":{
                  "type": "string",
                  "description": "",
                  "default":"RELIFUT19APR19MAYFUT"
                },
                "Series":{
                  "type": "string",
                  "description": "",
                  "default":"SF"
                },
                "NameWithSeries":{
                  "type": "string",
                  "description": "",
                  "default":"RELIFUT-SF"
                },
                "InstrumentID":{
                  "type": "integer",
                  "description": "",
                  "default":12100117578420
                },
                "PriceBand":{
                  "type": "object",
                  "properties":{
                    "High":{
                      "type": "integer",
                      "description": "",
                      "default":65
                    } ,
                    "Low": {
                      "type": "integer",
                      "description": "",
                      "default":-39
                    }
                  }
                },"FreezeQty":{
                  "type": "integer",
                  "description": "",
                  "default":0
                },
                "TickSize":{
                  "type": "double",
                  "description": "",
                  "default":0.05
                },
                "LotSize":{
                  "type": "integer",
                  "description": "",
                  "default":500
                },
                "UnderlyingInstrumentId":{
                  "type": "integer",
                  "description": "",
                  "default":-1
                },
                "UnderlyingIndexName":{
                  "type": "string",
                  "description": "",
                  "default":""
                },
                "ContractExpiration":{
                  "type": "date",
                  "description": "",
                  "default":"2019-04-25T00:00:00"
                },
                "ContractExpirationString":{
                  "type": "date",
                  "description": "",
                  "default":"25APR30MAY"
                },
                "RemainingExpiryDays":{
                  "type": "integer",
                  "description": "",
                  "default":44
                }
              }
            }
          }
        },
        "SearchSeries":{
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
            "type": {
              "$ref": "#/components/headers/Response-Type"
            },
            "code": {
              "$ref": "#/components/headers/Response-Code"
            },
            "description": {
              "description": "Record Found",
              "type": "string",
              "default":"Record Found"
            },
            "result": {
              "properties": {
  
                "series":{
                  "type": "array",
                  "description": "",
                  "default":[
                    "BL","BT","MF","NF","EQ","BE","N8","RL","NV"
                  ]
                }
              }
            }
          }
        },
        "SearchEquitySymbol":{
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
            "type": {
              "$ref": "#/components/headers/Response-Type"
            },
            "code": {
              "$ref": "#/components/headers/Response-Code"
            },
            "description": {
              "description": "Record Found",
              "type": "string",
              "default":"Record Found"
            },
            "result": {
              "properties": {
                "ExchangeSegment":{
                  "type": "integer",
                  "description": "",
                  "default":1
                },
                "ExchangeInstrumentID":{
                  "type": "integer",
                  "description": "",
                  "default":22
                },
                "InstrumentType":{
                  "type": "integer",
                  "description": "",
                  "default":8
                },
                "Name":{
                  "type": "string",
                  "description": "",
                  "default":"ACC"
                },
                "DisplayName":{
                  "type": "string",
                  "description": "",
                  "default":"ACC"
                },
                "Description":{
                  "type": "string",
                  "description": "",
                  "default":"ACC LIMITED"
                },
                "Series":{
                  "type": "string",
                  "description": "",
                  "default":"EQ"
                },
                "NameWithSeries":{
                  "type": "string",
                  "description": "",
                  "default":"ACC-EQ"
                },
                "InstrumentID":{
                  "type": "integer",
                  "description": "",
                  "default":1100100000022
                },
                "PriceBand":{
                  "type": "object",
                  "properties":{
                    "High":{
                      "type": "double",
                      "description": "",
                      "default":1804.9
                    } ,
                    "Low": {
                      "type": "double",
                      "description": "",
                      "default":1476.8
                    } ,
                    "CreditRating": {
                      "type": "string",
                      "description": "",
                      "default":"1476.80-1804.90"
                    } ,
                    "HighString": {
                      "type": "string",
                      "description": "",
                      "default":"1804.90"
                    } ,
                    "LowString": {
                      "type": "string",
                      "description": "",
                      "default":"1476.80"
                    }
                  }
                },"FreezeQty":{
                  "type": "integer",
                  "description": "",
                  "default":66476
                },
                "TickSize":{
                  "type": "double",
                  "description": "",
                  "default":0.05
                },
                "LotSize":{
                  "type": "integer",
                  "description": "",
                  "default":1
                }
              }
            }
          }
        },
        "SearchExpiryDate":{
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
            "type": {
              "$ref": "#/components/headers/Response-Type"
            },
            "code": {
              "$ref": "#/components/headers/Response-Code"
            },
            "description": {
              "description": "Record Found",
              "type": "string",
              "default":"Record Found"
            },
            "result": {
  
              "type": "array",
              "description": "",
              "default":["2025-01-30T14:30:00",
              "2025-02-27T14:30:00",
              "2025-03-27T14:30:00",
              "2025-02-27T14:30:00"]
  
  
        }
          }
        },
        "SearchFutureSymbol":{
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
            "type": {
              "$ref": "#/components/headers/Response-Type"
            },
            "code": {
              "$ref": "#/components/headers/Response-Code"
            },
            "description": {
              "description": "Record Found",
              "type": "string",
              "default":"Record Found"
            },
            "result": {
              "properties": {
                "ExchangeSegment":{
                  "type": "integer",
                  "description": "",
                  "default":2
                },
                "ExchangeInstrumentID":{
                  "type": "integer",
                  "description": "",
                  "default":35006
                },
                "InstrumentType":{
                  "type": "integer",
                  "description": "",
                  "default":1
                },
                "Name":{
                  "type": "string",
                  "description": "",
                  "default":"NIFTY"
                },
                "DisplayName":{
                  "type": "string",
                  "description": "",
                  "default":"NIFTY 30JAN2025"
                },
                "Description":{
                  "type": "string",
                  "description": "",
                  "default":"NIFTY25JANFUT"
                },
                "Series":{
                  "type": "string",
                  "description": "",
                  "default":"FUTIDX"
                },
                "InstrumentID":{
                  "type": "integer",
                  "description": "",
                  "default":2503000035006
                },
                "PriceBand":{
                  "type": "object",
                  "properties":{
                    "High":{
                      "type": "double",
                      "description": "",
                      "default":25131.1
                    } ,
                    "Low": {
                      "type": "double",
                      "description": "",
                      "default":20561.85
                    } ,
                    "CreditRating": {
                      "type": "string",
                      "description": "",
                      "default":"20561.85-25131.10"
                    } ,
                    "HighString": {
                      "type": "string",
                      "description": "",
                      "default":"23354.10"
                    } ,
                    "LowString": {
                      "type": "string",
                      "description": "",
                      "default":"22438.85"
                    },
                    "HighExecBandString": {
                      "type": "string",
                      "description": "",
                      "default":"23354.20"
                    },
                    "LowExecBandString": {
                      "type": "string",
                      "description": "",
                      "default":"22438.35"
                    },
                    "TERRange": {
                      "type": "string",
                      "description": "",
                      "default":"22438.35-23354.20"
                    },
  
                  }
                },"FreezeQty":{
                  "type": "integer",
                  "description": "",
                  "default":1801
                },
                "TickSize":{
                  "type": "double",
                  "description": "",
                  "default":0.05
                },
                "LotSize":{
                  "type": "integer",
                  "description": "",
                  "default":25
                },
                "UnderlyingInstrumentId":{
                  "type": "integer",
                  "description": "",
                  "default":-1
                },
                "UnderlyingIndexName":{
                  "type": "string",
                  "description": "",
                  "default":"Nifty 50"
                },
                "ContractExpiration":{
                  "type": "date",
                  "description": "",
                  "default":"2025-01-30T14:30:00"
                },
                "ContractExpirationString":{
                  "type": "date",
                  "description": "",
                  "default":"30Jan2025"
                },
                "RemainingExpiryDays":{
                  "type": "integer",
                  "description": "",
                  "default":3
                }
              }
            }
          }
        },
        "SearchOptionSymbol":{
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
            "type": {
              "$ref": "#/components/headers/Response-Type"
            },
            "code": {
              "$ref": "#/components/headers/Response-Code"
            },
            "description": {
              "description": "Record Found",
              "type": "string",
              "default":"Record Found"
            },
            "result": {
              "properties": {
                "ExchangeSegment":{
                  "type": "integer",
                  "description": "",
                  "default":2
                },
                "ExchangeInstrumentID":{
                  "type": "integer",
                  "description": "",
                  "default":44864
                },
                "InstrumentType":{
                  "type": "integer",
                  "description": "",
                  "default":2
                },
                "Name":{
                  "type": "string",
                  "description": "",
                  "default":"NIFTY"
                },
                "DisplayName":{
                  "type": "string",
                  "description": "",
                  "default":"NIFTY 06FEB2025 CE 22500"
                },
                "Description":{
                  "type": "string",
                  "description": "",
                  "default":"NIFTY2520622500CE"
                },
                "Series":{
                  "type": "string",
                  "description": "",
                  "default":"OPTIDX"
                },
                "InstrumentID":{
                  "type": "integer",
                  "description": "",
                  "default":2926300044668
                },
                "PriceBand":{
                  "type": "object",
                  "properties":{
                    "High":{
                      "type": "double",
                      "description": "",
                      "default":1265.25
                    } ,
                    "Low": {
                      "type": "double",
                      "description": "",
                      "default":116.5
                    } ,
                    "CreditRating": {
                      "type": "string",
                      "description": "",
                      "default":"116.50-1265.25"
                    } ,
                    "HighString": {
                      "type": "string",
                      "description": "",
                      "default":"1126.25"
                    } ,
                    "LowString": {
                      "type": "string",
                      "description": "",
                      "default":"116.5"
                    },
                    "HighExecBandString": {
                      "type": "string",
                      "description": "",
                      "default":"848.20"
                    } ,
                    "LowExecBandString": {
                      "type": "string",
                      "description": "",
                      "default":"363.55"
                    },
                    "HighExecBand": {
                      "type": "double",
                      "description": "",
                      "default":848.2
                    } ,
                    "LowExecBand": {
                      "type": "double",
                      "description": "",
                      "default":363.5
                    },
                    "TERRange": {
                      "type": "string",
                      "description": "",
                      "default":"363.55-848.20"
                    }
                  }
                },"FreezeQty":{
                  "type": "integer",
                  "description": "",
                  "default":1801
                },
                "TickSize":{
                  "type": "double",
                  "description": "",
                  "default":0.05
                },
                "LotSize":{
                  "type": "integer",
                  "description": "",
                  "default":75
                },
                "UnderlyingInstrumentId":{
                  "type": "integer",
                  "description": "",
                  "default":-1
                },
                "UnderlyingIndexName":{
                  "type": "string",
                  "description": "",
                  "default":"Nifty 50"
                },
                "ContractExpiration":{
                  "type": "date",
                  "description": "",
                  "default":"2025-02-06T14:30:00"
                },
                "ContractExpirationString":{
                  "type": "date",
                  "description": "",
                  "default":"06Feb2025"
                },
                "RemainingExpiryDays":{
                  "type": "integer",
                  "description": "",
                  "default":10
                },
                "StrikePrice":{
                  "type": "integer",
                  "description": "",
                  "default":22500
                },
                "OptionType":{
                  "type": "integer",
                  "description": "",
                  "default":3
                }
              }
            }
          }
        },
      "SearchStrike":{
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
  
            "result": {
  
                  "type": "array",
                  "description": "",
                  "default":["29350","28300","21350","21400","27550","18400","24200","26350","19200"]
  
  
            }
          }
        },
        "SearchOptionType":{
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
            "type": {
              "$ref": "#/components/headers/Response-Type"
            },
            "code": {
              "$ref": "#/components/headers/Response-Code"
            },
            "description": {
              "description": "Record Found",
              "type": "string",
              "default":"Record Found"
            },
            "result": {
              "properties": {
                "series":{
                  "type": "array",
                  "description": "",
                  "default":["PE","CE"]
                }
              }
            }
          }
        },"IndexList":{
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
            "type": {
              "$ref": "#/components/headers/Response-Type"
            },
            "code": {
              "$ref": "#/components/headers/Response-Code"
            },
            "description": {
              "description": "Record Found",
              "type": "string",
              "default":"Record Found"
            },
            "result": {
              "properties": {
                "exchangeSegment": {
                  "type": "integer",
                  "description": "{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3,\"BSECM\": 11, \"BSEFO\": 12} It is segment, which represents cash, derivative, commodity or currency market.",
                  "default":1
                },
                "indexList": {
                  "type": "array",
                  "description": "",
                  "default": [
                    "NIFTY 50_26000","NIFTY BANK_26001","INDIA VIX_26002","NIFTY IT_26003","NIFTY 100_26004","NIFTY MIDCAP 50_26005","NIFTY GS 11 15YR_26006","NIFTY INFRA_26007","NIFTY100 LIQ 15_26008","NIFTY REALTY_26009","NIFTY CPSE_26010"
                ]
  
                },
              }
            }
          }
        },
        "InstrumentsByIDBody":{
          "required": [
            "instruments"
          ],
          "properties": {
  
            "source":{
              "$ref": "#/components/parameters/source"
            },
            "instruments":{
              "type" : "array",
             "items" :{
                "$ref": "#/components/parameters/instrumentsPara"
              }
            },
          }
        },
        "masterResponse":{     
  
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
            "type": {
              "$ref": "#/components/headers/Response-Type"
            },
            "code": {
              "$ref": "#/components/headers/Response-Code"
            },
            "result": {
  
                "name": "category_in",
                "in": "query",
                "description": "NSECM|4059|8|RAMCOCEM|RAMCOCEM-AF|AF|RAMCOCEM-AF|1100100004059|748.75|612.65|14676.433394|0.05|1",
                "required": false,
                "type": "String",
                "items": {
                    "type": "string",
  
                },
  
              },
        }
      },
        "InstrumentsByID":{
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
            "type": {
              "$ref": "#/components/headers/Response-Type"
            },
            "code": {
              "$ref": "#/components/headers/Response-Code"
            },
            "description": {
              "description": "Instruments Found",
              "type": "string",
              "default":"Instruments Found"
            },
            "result": {
              "properties": {
                "AGM":{
                  "type": "boolean",
                  "description": "",
                  "default":false
                },
                "AllOrNone":{
                  "type": "boolean",
                  "description": "",
                  "default":true
                },
                "Bonus":{
                  "type": "boolean",
                  "description": "",
                  "default":true
                },
                "Dividend":{
                  "type": "boolean",
                  "description": "",
                  "default":true
                },
                "EGM":{
                  "type": "boolean",
                  "description": "",
                  "default":true
                },
                "AuctionDetailInfo":{
                  "type": "object",
                  "description": "",
                  "properties":{
                    "AuctionNumber":{
                      "type": "integer",
                      "description": "",
                      "default":0
                    },
                    "AuctionStatus":{
                      "type": "integer",
                      "description": "",
                      "default":0
                    },
                    "InitiatorType":{
                      "type": "integer",
                      "description": "",
                      "default":0
                    },
                    "SettlementPeriod":{
                      "type": "integer",
                      "description": "",
                      "default":0
                    },
                    "TotalBuyQty":{
                      "type": "integer",
                      "description": "",
                      "default":0
                    },
                    "TotalSellQty":{
                      "type": "integer",
                      "description": "",
                      "default":0
                    },
                    "AuctionQty":{
                      "type": "integer",
                      "description": "",
                      "default":0
                    },
                    "AuctionPrice":{
                      "type": "integer",
                      "description": "",
                      "default":0
                    },
                    "BestBuyPrice":{
                      "type": "integer",
                      "description": "",
                      "default":0
                    },
                    "BestSellPrice":{
                      "type": "integer",
                      "description": "",
                      "default":0
                    }
                  }
                },
                "ELMargin":{
                  "type": "integer",
                  "description": "",
                  "default":5
                },
                "Interest":{
                  "type": "boolean",
                  "description": "",
                  "default":true
                },
                "ISIN":{
                  "type": "string",
                  "description": "",
                  "default":"INE012A01025"
                },
                "MinimumFill":{
                  "type": "boolean",
                  "description": "",
                  "default":true
                },
                "Rights":{
                  "type": "boolean",
                  "description": "",
                  "default":true
                },
                "VaRMargin":{
                  "type": "double",
                  "description": "",
                  "default":10.28
                },
                "IssuedCapital":{
                  "type": "integer",
                  "description": "",
                  "default":8924587534
                },
                "BoardLotQuantity":{
                  "type": "integer",
                  "description": "",
                  "default":0
                },
                "FaceValue":{
                  "type": "integer",
                  "description": "",
                  "default":100
                },
                "Spread":{
                  "type": "integer",
                  "description": "",
                  "default":0
                },
                "CallAuction1Flag":{
                  "type": "boolean",
                  "description": "",
                  "default":false
                },
                "GSMIndicator":{
                  "type": "integer",
                  "description": "",
                  "default":0
                },
                "InstrumentID":{
                  "type": "integer",
                  "description": "",
                  "default":1100100003045
                },
                "ExchangeInstrumentID":{
                  "type": "integer",
                  "description": "",
                  "default":22
                },
                "DisplayName":{
                  "type": "string",
                  "description": "",
                  "default":"ACC"
                },
                "Name":{
                  "type": "string",
                  "description": "",
                  "default":"ACC"
                },
                "AuctionNumber":{
                  "type": "integer",
                  "description": "",
                  "default":0
                },
                "MinimumQty":{
                  "type": "integer",
                  "description": "",
                  "default":0
                },
                "QuantityMutliplier":{
                  "type": "integer",
                  "description": "",
                  "default":1
                },
                "PriceNumerator":{
                  "type": "integer",
                  "description": "",
                  "default":1
                },
                "PriceDenominator":{
                  "type": "integer",
                  "description": "",
                  "default":1
                },
                "LotSize":{
                  "type": "integer",
                  "description": "",
                  "default":1
                },
                "InstrumentType":{
                  "type": "integer",
                  "description": "",
                  "default":8
                },
                "SymbolType":{
                  "type": "integer",
                  "description": "",
                  "default":0
                },
                "CfiCode":{
                  "type": "string",
                  "description": "",
                  "default":"ESXXXX"
                },
                "Status":{
                  "type": "string",
                  "description": "",
                  "default":"ESXXXX"
                },
                "TicksPerPoint":{
                  "type": "integer",
                  "description": "",
                  "default":20
                },
                "TickSize":{
                  "type": "double",
                  "description": "",
                  "default":0.05
                },
                "Description":{
                  "type": "string",
                  "description": "",
                  "default":"ACC LIMITED-EQ"
                },
                "IsImpliedMarket":{
                  "type": "boolean",
                  "description": "",
                  "default":false
                },
                "IsTradeable":{
                  "type": "boolean",
                  "description": "",
                  "default":false
                },
                "ExchangeSegment":{
                  "type": "integer",
                  "description": "",
                  "default":1
                },
                "Series":{
                  "type": "string",
                  "description": "",
                  "default":"EQ"
                },
                "MaxTradeVolume":{
                  "type": "integer",
                  "description": "",
                  "default":2147483647
                },
                "PriceBand":{
                  "type": "object",
                  "description": "",
                  "properties":{
                    "High":{
                      "type": "double",
                      "description": "",
                      "default":330.45
                    },
                    "Low":{
                      "type": "double",
                      "description": "",
                      "default":270.45
                    }
                  }
                },
                "DecimalDisplace":{
                  "type": "integer",
                  "description": "",
                  "default":2
                },
                "ExtendedMarketProperties":{
                  "type": "object",
                  "description": "",
                  "properties":{
                     "CallAuctionIndicator":{
                       "properties":{
                         "Name":{
                           "default":"CallAuctionIndicator"
                         },
                         "Value":{
                           "default":""
                         }
                       }
                     },
                     "ExpulsionDate":{
                      "properties":{
                        "Name":{
                          "default":"ExpulsionDate"
                        },
                        "Value":{
                          "default":"01Jan1980"
                        }
                      }
                    },
                    "IssueMaturityDate":{
                      "properties":{
                        "Name":{
                          "default":"IssueMaturityDate"
                        },
                        "Value":{
                          "default":"01Jan1980"
                        }
                      }
                    },
                    "ReAdmissionDate":{
                      "properties":{
                        "Name":{
                          "default":"ReAdmissionDate"
                        },
                        "Value":{
                          "default":"01Jan1980"
                        }
                      }
                    },
                    "CorporateAction":{
                      "properties":{
                        "Name":{
                          "default":"CorporateAction"
                        },
                        "Value":{
                          "default":"01Jan1980"
                        }
                      }
                    },
                    "NoDeliveryEndDate":{
                      "properties":{
                        "Name":{
                          "default":"NoDeliveryEndDate"
                        },
                        "Value":{
                          "default":"01Jan1980"
                        }
                      }
                    },
                    "IssueRate":{
                      "properties":{
                        "Name":{
                          "default":"IssueRate"
                        },
                        "Value":{
                          "default":""
                        }
                      }
                    },
                    "SettlementNo":{
                      "properties":{
                        "Name":{
                          "default":"CallAuctionIndicator"
                        },
                        "Value":{
                          "default":"Missing"
                        }
                      }
                    },
                    "InterestPaymentDate":{
                      "properties":{
                        "Name":{
                          "default":"InterestPaymentDate"
                        },
                        "Value":{
                          "default":"01Jan1980"
                        }
                      }
                    },
                    "ListingDate":{
                      "properties":{
                        "Name":{
                          "default":"ListingDate"
                        },
                        "Value":{
                          "default":"01Jan1980"
                        }
                      }
                    },
                    "CompanyName":{
                      "properties":{
                        "Name":{
                          "default":"CompanyName"
                        },
                        "Value":{
                          "default":"ACC LIMITED-EQ"
                        }
                      }
                    },
                    "UniqueKey":{
                      "properties":{
                        "Name":{
                          "default":"UniqueKey"
                        },
                        "Value":{
                          "default":"ACC"
                        }
                      }
                    },
                    "CreditRating":{
                      "properties":{
                        "Name":{
                          "default":"CreditRating"
                        },
                        "Value":{
                          "default":"270.45-330.45"
                        }
                      }
                    },
                    "RecordDate":{
                      "properties":{
                        "Name":{
                          "default":"RecordDate"
                        },
                        "Value":{
                          "default":"01Jan1980"
                        }
                      }
                    },
                    "NoDeliveryStartDate":{
                      "properties":{
                        "Name":{
                          "default":"NoDeliveryStartDate"
                        },
                        "Value":{
                          "default":"01Jan1980"
                        }
                      }
                    },
                    "MarketType":{
                      "properties":{
                        "Name":{
                          "default":"MarketType"
                        },
                        "Value":{
                          "default":"NORMAL"
                        }
                      }
                    },
                    "BookClosureStartDate":{
                      "properties":{
                        "Name":{
                          "default":"BookClosureStartDate"
                        },
                        "Value":{
                          "default":"19Feb2019"
                        }
                      }
                    },
                    "ExDate":{
                      "properties":{
                        "Name":{
                          "default":"ExDate"
                        },
                        "Value":{
                          "default":"19Feb2020"
                        }
                      }
                    },
                    "WarningPercent":{
                      "properties":{
                        "Name":{
                          "default":"WarningPercent"
                        },
                        "Value":{
                          "default":"0"
                        }
                      }
                    },
                    "IssueStartDate":{
                      "properties":{
                        "Name":{
                          "default":"IssueStartDate"
                        },
                        "Value":{
                          "default":"24Oct1994"
                        }
                      }
                    },
                    "BookClosureEndDate":{
                      "properties":{
                        "Name":{
                          "default":"BookClosureEndDate"
                        },
                        "Value":{
                          "default":"28Feb2019"
                        }
                      }
                    },
                    "Remarks":{
                      "properties":{
                        "Name":{
                          "default":"Remarks"
                        },
                        "Value":{
                          "default":"AGM/CHANGE IN RTA"
                        }
                      }
                    }
                  }
                },             
                "MarketTypeStatusEligibility":{
                  "type": "object",
                  "description": "",
                  "properties":{
                     "Normal":{
                       "type":"object",
                       "properties":{
                         "MarketType":{
                          "type": "integer",
                          "description": "",
                          "default":1
                         },
                         "Eligibile":{
                          "type": "boolean",
                          "description": "",
                          "default":true
                         },
                         "TradingStatus":{
                          "type": "integer",
                          "description": "",
                          "default":6
                         }
                       }
                     },
                     "OddLot":{
                      "type":"object",
                      "properties":{
                        "MarketType":{
                         "type": "integer",
                         "description": "",
                         "default":2
                        },
                        "Eligibile":{
                         "type": "boolean",
                         "description": "",
                         "default":false
                        },
                        "TradingStatus":{
                         "type": "integer",
                         "description": "",
                         "default":2
                        }
                      }
                    },
                    "RetailDebt":{
                      "type":"object",
                      "properties":{
                        "MarketType":{
                         "type": "integer",
                         "description": "",
                         "default":3
                        },
                        "Eligibile":{
                         "type": "boolean",
                         "description": "",
                         "default":false
                        },
                        "TradingStatus":{
                         "type": "integer",
                         "description": "",
                         "default":2
                        }
                      }
                    },
                    "Auction":{
                      "type":"object",
                      "properties":{
                        "MarketType":{
                         "type": "integer",
                         "description": "",
                         "default":4
                        },
                        "Eligibile":{
                         "type": "boolean",
                         "description": "",
                         "default":true
                        },
                        "TradingStatus":{
                         "type": "integer",
                         "description": "",
                         "default":2
                        }
                      }
                    },
                    "CallAuction1":{
                      "type":"object",
                      "properties":{
                        "MarketType":{
                         "type": "integer",
                         "description": "",
                         "default":5
                        },
                        "Eligibile":{
                         "type": "boolean",
                         "description": "",
                         "default":false
                        },
                        "TradingStatus":{
                         "type": "integer",
                         "description": "",
                         "default":1
                        }
                      }
                    },
                    "CallAuction2":{
                      "type":"object",
                      "properties":{
                        "MarketType":{
                         "type": "integer",
                         "description": "",
                         "default":6
                        },
                        "Eligibile":{
                         "type": "boolean",
                         "description": "",
                         "default":true
                        },
                        "TradingStatus":{
                         "type": "integer",
                         "description": "",
                         "default":1
                        }
                      }
                    }
                  }
                },
                "NameWithSeries":{
                  "type": "string",
                  "description": "",
                  "default":"ACC-EQ"
                },
                "DisplayNameWithExchange":{
                  "type": "string",
                  "description": "",
                  "default":"ACC - NSECM"
                },
                "FreezeQty":{
                  "type": "integer",
                  "description": "",
                  "default":374832
                },
                "LastUpdateTime":{
                  "type": "integer",
                  "description": "",
                  "default":1220519308
                },
                "FiftyTwoWeekHigh":{
                  "type": "double",
                  "description": "",
                  "default":351.3
                },
                "FiftyTwoWeekLow":{
                  "type": "double",
                  "description": "",
                  "default":232.35
                },
                "Bhavcopy":{
                  "type": "object",
                  "description": "",
                  "properties":{
                    "Open":{
                      "type": "double",
                      "description": "",
                      "default":266
                    },
                    "High":{
                      "type": "double",
                      "description": "",
                      "default":267.9
                    },
                    "Low":{
                      "type": "double",
                      "description": "",
                      "default":261.5
                    },
                    "Close":{
                      "type": "double",
                      "description": "",
                      "default":263.75
                    },
                    "TotTrdQty":{
                      "type": "integer",
                      "description": "",
                      "default":42967696
                    },
                    "TotTrdVal":{
                      "type": "double",
                      "description": "",
                      "default":11389044523.95
                    },
                    "TimeStamp":{
                      "type": "date",
                      "description": "",
                      "default":"0001-01-01T00:00:00"
                    },
                    "TotalTrades":{
                      "type": "integer",
                      "description": "",
                      "default":197824
                    },
                    "OpenInterest":{
                      "type": "integer",
                      "description": "",
                      "default":0
                    },
                    "SettlementPrice":{
                      "type": "integer",
                      "description": "",
                      "SettlementPrice":0
                    }
                  }
                },
                "AdditionalPreExpiryMarginPerc":{
                  "type": "integer",
                  "description": "",
                  "default":0
                },
                "AdditionalMarginPercLong":{
                  "type": "integer",
                  "description": "",
                  "default":0
                },
                "AdditionalMarginPercShort":{
                  "type": "integer",
                  "description": "",
                  "default":0
                },
                "DeliveryMarginPerc":{
                  "type": "integer",
                  "description": "",
                  "default":0
                },
                "SpecialMarginPercBuy":{
                  "type": "integer",
                  "description": "",
                  "default":0
                },
                "SpecialMarginPercSell":{
                  "type": "integer",
                  "description": "",
                  "default":0
                },
                "TenderMargin":{
                  "type": "integer",
                  "description": "",
                  "default":0
                },
                "ELMLongMargin":{
                  "type": "integer",
                  "description": "",
                  "default":0
                },
                "ELMShortMargin":{
                  "type": "integer",
                  "description": "",
                  "default":0
                },
                "InitialMarginPerc":{
                  "type": "integer",
                  "description": "",
                  "default":0
                },
                "ExposureMarginPerc":{
                  "type": "integer",
                  "description": "",
                  "default":0
                },
                "CallAuctionIndicator":{
                  "type": "integer",
                  "description": "",
                  "default":1
                },
                "MarketType":{
                  "type": "integer",
                  "description": "",
                  "default":1
                },
                "CurrentEligibleMarketType":{
                  "type": "integer",
                  "description": "",
                  "default":1
                },
                "InstrumentLazyLoader":{
                  "type": "integer",
                  "description": "",
                  "default":null
                }
              }
            }
          }
        },
        "UnsubscriptionBody":{
          "required": [
            "instruments","xtsMessageCode","publishFormatoken","token","xtsMessageCode"
          ],
          "properties": {
  
  
            "instruments":{
              "type" : "array",
             "items" :{
                "$ref": "#/components/parameters/instrumentsPara"
              }
            },
            "xtsMessageCode":{
              "$ref": "#/components/parameters/UnsubscriptionMarketDataPort"
            }
          }
        },
        "SubscriptionBody":{
          "required": [
            "instruments","xtsMessageCode","publishFormatoken","token"
          ],
          "properties": {
  
  
            "instruments":{
              "type" : "array",
             "items" :{
                "$ref": "#/components/parameters/instrumentsPara"
              }
            },
            "xtsMessageCode":{
              "$ref": "#/components/parameters/subscriptionMarketDataPort"
            }
          }
        },
  
        "masterBody":{
          "properties": {
            "exchangeSegmentList":{
              "$ref": "#/components/parameters/segmentAssign"
            }
          }
        },
  
        "QuoteBody":{
          "required": [
            "instruments","xtsMessageCode","publishFormat","token"
          ],
          "properties": {
  
            "instruments":{
              "type" : "array",
             "items" :{
                "$ref": "#/components/parameters/instrumentsPara"
              }
            },
            "xtsMessageCode":{
              "$ref": "#/components/parameters/quoteDataPort"
  
            },
            "publishFormat":{
              "$ref": "#/components/parameters/publishFormat" 
            }
          }
        },
        "ClientConfigBody":{
  
  
        },
        "LogoutBody":{
  
  
        },
        "LoginBody":{
          "required": [
            "secretKey","appKey","source"
          ],
          "properties": {
  
            "secretKey":{
              "$ref": "#/components/parameters/password"
            },
            "appKey":{
              "$ref": "#/components/parameters/Api-Key-Public"
            },
            "source":{
              "$ref": "#/components/parameters/source"
            }
          }
        },
          "Error": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Error for request",
                "default":"error"
              }, 
              "code": {
                "type": "string",
                "description": "e-user-0001 to e-user-004",
                "default":"e-token-0005"
              },
              "description": {
                "type": "string",
                "description": "Reason for failed request.",
                "default":"Invalid Token"
              }
            }
          },
          "dataError": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Error for request",
                "default":"error"
              }, 
              "code": {
                "type": "string",
                "description": "e-instrunent-0001",
                "default":"e-instrunent-0001"
              },
              "description": {
                "type": "string",
                "description": "Reason for failed request.",
                "default":"Data not available"
              }
            }
          },
        "UserLogout":{
          "type": "object",
          "required": [
          ],
          "properties": {
            "type": {
              "$ref": "#/components/headers/Response-Type"
            },
            "code": {
              "$ref": "#/components/headers/Response-Code"
            },
            "description": {
              "description": "successfully logout",
              "type": "string",
              "default":"successfully logout."
            }
          }
        },
        "UserLogin": {
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
            "type": {
              "$ref": "#/components/headers/Response-Type"
            },
            "code": {
              "$ref": "#/components/headers/Response-Code"
            },
            "description": {
              "description": "Provided Valid Credentials",
              "type": "string",
              "default":"Provided Valid Credentials"
            },
            "result": {
              "properties": {
                "token": {
                  "type" : "string",
                  "description": "The unique, token generated to validate user and get data.",
                  "allOf": [
                    {
                      "name": "token",
                      "in": "path",
                      "description": "The resource identifier string",
                      "required": true,
                      "schema": {
                        "type": "string"
                      },
                      "default":"eyJ1c2VySWQiOiJDSEFJVEFMSSIsInB1YmxpY0tleSI6IjMwNjQ0NzAwMzdlOGM1NzciLCJpYXQiOjE1NTI0NjYxNTEsImV4cCI6MTU1MjU1MjU1MX0"
                    }
                  ]
                },
                "userID": {
                  "type" : "string",
                  "description": "user id",
                  "allOf": [
                    {
                      "name": "userID",
                      "in": "path",
                      "description": "The resource identifier string",
                      "required": true,
                      "schema": {
                        "type": "string"
                      },
                      "default":""
                    }
                  ]
                },
                "appVersion": {
                  "type" : "string",
                  "description": "Version number of APIs",
                  "allOf": [
                    {
                      "name": "appVersion",
                      "in": "path",
                      "description": "The resource identifier string",
                      "required": true,
                      "schema": {
                        "type": "string"
                      },
                      "default":""
                    }
                  ]
                }
              }
            }
          }
        },
        "clientConfig": {
          "type": "object",
          "required": [
  
            "enums"
          ],
          "properties": {
            "type": {
              "$ref": "#/components/headers/Response-Type"
            },
            "code": {
              "$ref": "#/components/headers/Response-Code"
            },
            "description": {
              "description": "Fetched configurations successfully",
              "type": "string",
              "default":"Fetched configurations successfully"
            },
            "result": {
              "properties": {
                "exchangeSegments": {
                  "$ref": "#/components/schemas/exchangeSegments"
                },
                "xtsMessageCode": {,
  
                  "$ref": "#/components/schemas/marketDataPorts"
                },
                "publishFormat": {
                  "description": "",
                  "type": "array",
                  "enum": [
                    "Binary",
                    "JSON"
                  ],
                  "default":["Binary","JSON"]
                },
                "broadCastMode": {
                  "description": "",
                  "type": "object",
                  "enum": [
                    "Full",
                    "Partial"
                  ],
                  "default":["Binary","JSON"]
                },
                "instrumentType": {
                  "$ref": "#/components/schemas/instrumentType"
                },
              }
            }
          }
        },
        "exchangeSegments": {
          "type": "object",
          "required": [],
          "properties": {
            "NSECM": {
              "description": "1",
              "type":"integer",
              "default": 1
            },
            "NSEFO": {
              "description": "2",
              "type":"integer",
              "default": 2
            },
            "NSECD": {
              "description": "3",
              "type":"integer",
              "default": 3
            },
            "BSECM": {
              "description": "11",
              "type":"integer",
              "default": 11
            },
            "BSEFO": {
              "description": "12",
              "type":"integer",
              "default": 12
            },
            "BSECD":{
              "description":"13",
              "type":"integer",
              "default": 13
            }
          }
        },
  
        "marketDataPorts": {
          "type": "object",
          "required": [],
          "properties": {
            "marketDepthEvent": {
              "description": "1502",
              "type":"integer",
              "default": 1502
            },
            "indexDataEvent": {
              "description": "1504",
              "type":"integer",
              "default": 1504
            },
            "candleDataEvent": {
              "description": "1505",
              "type":"integer",
              "default": 1505
            },
            "openInterestEvent": {
              "description": "1510",
              "type":"integer",
              "default": 1510
            }
          }
        },
        "instrumentType": {
          "type": "object",
          "required": [],
          "properties": {
            "Futures": {
              "description": "1",
              "type":"integer",
              "default": 1
            },
            "Options": {
              "description": "2",
              "type":"integer",
              "default": 2
            },
            "Spread": {
              "description": "4",
              "type":"integer",
              "default": 4
            },
            "Equity": {
              "description": "8",
              "type":"integer",
              "default": 8
            },
            "Spot": {
              "description": "16",
              "type":"integer",
              "default": 16
            },
            "PreferenceShares": {
              "description": "32",
              "type":"integer",
              "default": 32
            },
            "Debentures": {
              "description": "64",
              "type":"integer",
              "default": 64
            },
            "Warrants": {
              "description": "128",
              "type":"integer",
              "default": 128
            },
            "Miscellaneous": {
              "description": "256",
              "type":"integer",
              "default": 256
            },
            "MutualFund": {
              "description": "512",
              "type":"integer",
              "default": 512
            }
          }
        },
        "subscription": {
          "type": "object",
          "description": "",
          "required": [],
          "properties": {
            "type": {
              "$ref": "#/components/headers/Response-Type"
            },
            "code": {
              "$ref": "#/components/headers/Response-Code"
            },
            "description": {
              "description": "Instrument subscribed successfully!",
              "type": "string",
              "default":"Instrument subscribed successfully!"
            },
            "result": {
              "properties": {
                "mdp": {
                  "description": "Market data events from where client subscribe instrument",
                  "type": "integer",
                  "default":1502
                },
                "quoteList": {
                  "$ref": "#/components/schemas/quoteList"
                },
                "listQuotes": {
                  "type": "object",
                  "description": "Market data list of instruments requested",
                  "properties": {
                    "MessageCode": {
                      "description": "It is system generated message code",
                      "type": "integer",
                      "default":1502
                    },
                    "MessageVersion": {
                      "description": "It is system generated message version",
                      "type": "integer",
                      "default":1
                    },
                    "ApplicationType": {
                      "description": "It is system generated ApplicationType",
                      "type": "integer",
                      "default":0
                    },
                    "TokenID": {
                      "description": "The unique, token generated to validate user and get data.",
                      "type": "integer",
                      "default":0
                    },
                    "ExchangeSegment": {
                      "description": "{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3,\"BSECM\": 11, \"BSEFO\": 12} It is segment, which represents cash, derivative, commodity or currency market.",
                      "type": "integer",
                      "default":1
                    },
                    "ExchangeInstrumentID": {
                      "description": "Instrument Unique ID",
                      "type": "integer",
                      "default":2885
                    },
                    "ExchangeTimeStamp": {
                      "description": "A timestamp is the current time of an event that is recorded by a Exchange",
                      "type": "date",
                      "default":1205682353
                    },
                    "Bids": {
                      "type": "object",
                      "description":"The bid price displayed in most quote services is the highest bid price in the market. The ask or offer price on the other hand is the lowest price a seller of a particular stock is willing to sell a share of that given stock.",
                      "properties": {
                        "Size": {
                          "description": "Size",
                          "type": "integer",
                          "default":0
                        },
                        "Price": {
                          "description": "Price",
                          "type": "integer",
                          "default":0
                        },
                        "TotalOrders": {
                          "description": "Total no of order ",
                          "type": "integer",
                          "default":0
                        },
                        "BuyBackMarketMaker": {
                          "description": "",
                          "type": "integer",
                          "default":0
                        }
                      }
                    },
                    "Asks": {
                      "type": "object",
                      "description":"the ask price is the lowest price a seller of a stock is willing to accept for a share of that given stock",
                      "properties": {
                        "Size": {
                          "description": "Size",
                          "type": "integer",
                          "default":14916
                        },
                        "Price": {
                          "description": "Price",
                          "type": "double",
                          "default":900.05
                        },
                        "TotalOrders": {
                          "description": "Total no of order",
                          "type": "integer",
                          "default":10
                        },
                        "BuyBackMarketMaker": {
                          "description": "",
                          "type": "integer",
                          "default":0
                        }
                      }
                    },
                    "Touchline": {
                      "type": "object",
                      "description":"Touchline is the highest price that a buyer of a particular security is willing to pay and the lowest price at which a seller is willing to sell at any given time in the trading day",
                      "properties": {
                        "BidInfo": {
                          "type": "object",
                          "description":"The bid price displayed in most quote services is the highest bid price in the market. The ask or offer price on the other hand is the lowest price a seller of a particular stock is willing to sell a share of that given stock.",
                          "properties": {
                            "Size": {
                              "description": "Size",
                              "type": "integer",
                              "default":0
                            },
                            "Price": {
                              "description": "Price",
                              "type": "integer",
                              "default":0
                            },
                            "TotalOrders": {
                              "description": "Total no of order",
                              "type": "integer",
                              "default":0
                            },
                            "BuyBackMarketMaker": {
                              "description": "",
                              "type": "integer",
                              "default":0
                            }
                          }
                        },
                        "AskInfo": {
                          "type": "object",
                          "description":"the ask price is the lowest price a seller of a stock is willing to accept for a share of that given stock",
                          "properties": {
                            "Size": {
                              "description": "Size",
                              "type": "integer",
                              "default":14916
                            },
                            "Price": {
                              "description": "Price",
                              "type": "double",
                              "default":900.05
                            },
                            "TotalOrders": {
                              "description": "Total no of order",
                              "type": "integer",
                              "default":10
                            },
                            "BuyBackMarketMaker": {
                              "description": "",
                              "type": "integer",
                              "default":0
                            }
                          }
                        },
                        "LastTradedPrice": {
                          "description": "Last traded price of that instrument",
                          "type": "double",
                          "default":900.05
                        },
                        "LastTradedQunatity": {
                          "description": "Last traded qunatity of that instrument",
                          "type": "integer",
                          "default":1
                        },
                        "TotalBuyQuantity": {
                          "description": "Total number buy order qunatity",
                          "type": "integer",
                          "default":0
                        },
                        "TotalSellQuantity": {
                          "description": "Total number buy order qunatity",
                          "type": "integer",
                          "default":14916
                        },
                        "TotalTradedQuantity": {
                          "description": "Total number traded order qunatity",
                          "type": "double",
                          "default":14085685
                        },
                        "AverageTradedPrice": {
                          "description": "Average traded price of that instrument",
                          "type": "double",
                          "default":898.81
                        },
                        "LastTradedTime": {
                          "description": "Last traded time",
                          "type": "date",
                          "default":1205682353
                        },
                        "LastUpdateTime": {
                          "description": "Last Update time",
                          "type": "date",
                          "default":1205682353
                        },
                        "PercentChange": {
                          "description": "To calculate the gain, take the price for which you sold the investment and subtract from it the price that you initially paid for it. Now that you have your gain, divide the gain by the original amount of the investment. Finally, multiply your answer by 100 to get the percentage change in your investment",
                          "type": "integer",
                          "default":0
                        },
                        "Open": {
                          "description": "The opening price is the price at which a security first trades upon the opening of an exchange on a trading day",
                          "type": "integer",
                          "default":900
                        },
                        "High": {
                          "description": "Today's high refers to a security's intraday high trading price. Today's high is the highest price at which a stock traded during the course of the day",
                          "type": "double",
                          "default":909.1
                        },
                        "Low": {
                          "description": "Today's low refers to a security's intraday low trading price. Today's low is the lowest price at which a stock traded during the course of the day",
                          "type": "double",
                          "default":890.7
                        },
                        "Close": {
                          "description": "The close is the end of a trading session in the financial markets when the markets close",
                          "type": "double",
                          "default":900.05
                        },
                        "TotalValueTraded": {
                          "description": "The value of shares traded is the total number of shares traded",
                          "type": "integer",
                          "default":1865862348
                        },
                        "BuyBackTotalBuy": {
                          "description": "",
                          "type": "integer",
                          "default":38125
                        },
                        "BuyBackTotalSell": {
                          "description": "",
                          "type": "integer",
                          "default":16903
                        }
                      }
                    },
                    "BookType": {
                      "description": "BookType i.e. Normal, IlliquidCallAuction, OddLot etc",
                      "type": "integer",
                      "default":0
                    },
                    "XMarketType": {
                      "description": "XMarketType i.e. StopLoss, OddLot, Auction, CallAuction1 etc",
                      "type": "integer",
                      "default":0
                    }
                  }
                }
              }   
            }
          }
        },
        "unsubscription": {
          "type": "object",
          "description": "",
          "required": [],
          "properties": {
            "type": {
              "$ref": "#/components/headers/Response-Type"
            },
            "code": {
              "$ref": "#/components/headers/Response-Code"
            },
            "description": {
              "description": "instrument subscription deleted!",
              "type": "string",
              "default":"Instrument subscription deleted!"
            },
            "result": {
              "properties": {
                "Remaining_Subscription_Count": {
                  "description": "",
                  "type": "integer",
                  "default":4
                }
              }
            }
          }
        },
        "quoteList": {
          "type": "object",
          "description": "Response of subscribe instrument",
          "required": [],
          "properties": {
            "exchangeSegment": {
              "type": "integer",
              "description": "{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3,\"BSECM\": 11, \"BSEFO\": 12} It is segment, which represents cash, derivative, commodity or currency market.",
              "default":1
            },
            "exchangeInstrumentID": {
              "type": "integer",
              "description": "Instrument Unique ID",
              "default":2885
            }
          }
        },
        "unsubList": {
          "type": "object",
          "description": "Response of unsubscribe instrument",
          "required": [],
          "properties": {
            "exchangeSegment": {
              "type": "integer",
              "description": "{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3,\"BSECM\": 11, \"BSEFO\": 12} It is segment, which represents cash, derivative, commodity or currency market.",
              "default":1
            },
            "exchangeInstrumentID": {
              "type": "integer",
              "description": "Instrument Unique ID",
              "default":2885
            }
          }
        },
        "quote": {
          "type": "object",
          "description": "",
          "required": [],
          "properties": {
            "type": {
              "$ref": "#/components/headers/Response-Type"
            },
            "code": {
              "$ref": "#/components/headers/Response-Code"
            },
            "description": {
              "description": "Get quotes successfully!",
              "type": "string",
              "default":"Get quotes successfully!"
            },
            "result": {
              "properties": {
                "mdp": {
                  "description": "Market data events from where client subscribe instrument",
                  "type": "integer",
                  "default":1502
                },
                "quoteList": {
                  "$ref": "#/components/schemas/quoteList"
                },
                "listQuotes": {
                  "type": "object",
                  "description": "Market data list of instruments requested",
                  "properties": {
                    "MessageCode": {
                      "description": "It is system generated message code",
                      "type": "integer",
                      "default":1502
                    },
                    "MessageVersion": {
                      "description": "It is system generated message version",
                      "type": "integer",
                      "default":1
                    },
                    "ApplicationType": {
                      "description": "It is system generated ApplicationType",
                      "type": "integer",
                      "default":0
                    },
                    "TokenID": {
                      "description": "The unique, token generated to validate user and get data.",
                      "type": "integer",
                      "default":0
                    },
                    "ExchangeSegment": {
                      "description": "{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3,\"BSECM\": 11, \"BSEFO\": 12} It is segment, which represents cash, derivative, commodity or currency market.",
                      "type": "integer",
                      "default":1
                    },
                    "ExchangeInstrumentID": {
                      "description": "Instrument Unique ID",
                      "type": "integer",
                      "default":2885
                    },
                    "ExchangeTimeStamp": {
                      "description": "A timestamp is the current time of an event that is recorded by a Exchange",
                      "type": "date",
                      "default":1205682353
                    },
                    "Bids": {
                      "type": "object",
                      "description":"The bid price displayed in most quote services is the highest bid price in the market. The ask or offer price on the other hand is the lowest price a seller of a particular stock is willing to sell a share of that given stock.",
                      "properties": {
                        "Size": {
                          "description": "Size",
                          "type": "integer",
                          "default":0
                        },
                        "Price": {
                          "description": "Price",
                          "type": "integer",
                          "default":0
                        },
                        "TotalOrders": {
                          "description": "Total no of order ",
                          "type": "integer",
                          "default":0
                        },
                        "BuyBackMarketMaker": {
                          "description": "",
                          "type": "integer",
                          "default":0
                        }
                      }
                    },
                    "Asks": {
                      "type": "object",
                      "description":"the ask price is the lowest price a seller of a stock is willing to accept for a share of that given stock",
                      "properties": {
                        "Size": {
                          "description": "Size",
                          "type": "integer",
                          "default":14916
                        },
                        "Price": {
                          "description": "Price",
                          "type": "double",
                          "default":900.05
                        },
                        "TotalOrders": {
                          "description": "Total no of order",
                          "type": "integer",
                          "default":0
                        },
                        "BuyBackMarketMaker": {
                          "description": "",
                          "type": "integer",
                          "default":0
                        }
                      }
                    },
                    "Touchline": {
                      "type": "object",
                      "description":"Touchline is the highest price that a buyer of a particular security is willing to pay and the lowest price at which a seller is willing to sell at any given time in the trading day",
                      "properties": {
                        "BidInfo": {
                          "type": "object",
                          "description":"The bid price displayed in most quote services is the highest bid price in the market. The ask or offer price on the other hand is the lowest price a seller of a particular stock is willing to sell a share of that given stock.",
                          "properties": {
                            "Size": {
                              "description": "Size",
                              "type": "integer",
                              "default":0
                            },
                            "Price": {
                              "description": "Price",
                              "type": "integer",
                              "default":0
                            },
                            "TotalOrders": {
                              "description": "Total no of order",
                              "type": "integer",
                              "default":10
                            },
                            "BuyBackMarketMaker": {
                              "description": "",
                              "type": "integer",
                              "default":0
                            }
                          }
                        },
                        "AskInfo": {
                          "type": "object",
                          "description":"the ask price is the lowest price a seller of a stock is willing to accept for a share of that given stock",
                          "properties": {
                            "Size": {
                              "description": "Size",
                              "type": "integer",
                              "default":14916
                            },
                            "Price": {
                              "description": "Price",
                              "type": "integer",
                              "default":900.05
                            },
                            "TotalOrders": {
                              "description": "Total no of order",
                              "type": "integer",
                              "default":10
                            },
                            "BuyBackMarketMaker": {
                              "description": "",
                              "type": "integer",
                              "default":0
                            }
                          }
                        },
                        "LastTradedPrice": {
                          "description": "Last traded price of that instrument",
                          "type": "double",
                          "default":900.05
                        },
                        "LastTradedQunatity": {
                          "description": "Last traded qunatity of that instrument",
                          "type": "integer",
                          "default":2
                        },
                        "TotalBuyQuantity": {
                          "description": "Total number buy order qunatity",
                          "type": "integer",
                          "default":0
                        },
                        "TotalSellQuantity": {
                          "description": "Total number buy order qunatity",
                          "type": "integer",
                          "default":14916
                        },
                        "TotalTradedQuantity": {
                          "description": "Total number traded order qunatity",
                          "type": "double",
                          "default":14085685
                        },
                        "AverageTradedPrice": {
                          "description": "Average traded price of that instrument",
                          "type": "double",
                          "default":898.81
                        },
                        "LastTradedTime": {
                          "description": "Last traded time",
                          "type": "date",
                          "default":1205682353
                        },
                        "LastUpdateTime": {
                          "description": "Last Update time",
                          "type": "date",
                          "default":1205682353
                        },
                        "PercentChange": {
                          "description": "To calculate the gain, take the price for which you sold the investment and subtract from it the price that you initially paid for it. Now that you have your gain, divide the gain by the original amount of the investment. Finally, multiply your answer by 100 to get the percentage change in your investment",
                          "type": "integer",
                          "default":0
                        },
                        "Open": {
                          "description": "The opening price is the price at which a security first trades upon the opening of an exchange on a trading day",
                          "type": "double",
                          "default":909.01
                        },
                        "High": {
                          "description": "Today's high refers to a security's intraday high trading price. Today's high is the highest price at which a stock traded during the course of the day",
                          "type": "double",
                          "default":909.7
                        },
                        "Low": {
                          "description": "Today's low refers to a security's intraday low trading price. Today's low is the lowest price at which a stock traded during the course of the day",
                          "type": "double",
                          "default":886.05
                        },
                        "Close": {
                          "description": "The close is the end of a trading session in the financial markets when the markets close",
                          "type": "double",
                          "default":900.05
                        },
                        "TotalValueTraded": {
                          "description": "The value of shares traded is the total number of shares traded",
                          "type": "double",
                          "default":1865862348
                        },
                        "BuyBackTotalBuy": {
                          "description": "",
                          "type": "double",
                          "default":38125
                        },
                        "BuyBackTotalSell": {
                          "description": "",
                          "type": "double",
                          "default":16903
                        }
                      }
                    },
                    "BookType": {
                      "description": "BookType i.e. Normal, IlliquidCallAuction, OddLot etc",
                      "type": "integer",
                      "default":0
                    },
                    "XMarketType": {
                      "description": "XMarketType i.e. StopLoss, OddLot, Auction, CallAuction1 etc",
                      "type": "integer",
                      "default":0
                    }
                  }
                }
              }   
            }
          }
        }
      },
      "responses": {
        "BadRequest": {
          "description": "Bad Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "DataBadRequest": {
          "description": "Bad Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataError"
              }
            }
          }
        }
      },
      "parameters": {
        "segmentAssign": {
          "name": "segmentAssign",
          "in": "body",
          "description": "Segment Assigned",
          "type": "array",
          "default":["NSECM","NSECD","NSEFO"],
  
        },
        "userID": {
          "name": "userID",
          "in": "body",
          "description": "User id",
          "type": "string",
          "default":"SYMP"
        },
        "password": {
          "name": "secretKey",
          "in": "body",
          "description": "Password to validate",
          "type": "password",
          "default":"Sft@1111"
        },
        "Api-Key-Public": {
          "name": "appKey",
          "in": "body",
          "description": "The public API key",
          "type": "string",
          "default":"3064470037e8c577"
        },
        "source": {
          "name": "source",
          "in": "body",
          "description": "Login source of user",
          "required": true,
          "schema": {
            "type": "string",
            "enum": [
              "TWSAPI",
              "WebAPI",
              "MobileAndroidAPI",
              "MobileWindowsAPI",
              "MobileIOSAPI"
            ]
          },
          "default":"WebAPI"
        },
        "token": {
          "name": "token",
          "in": "query",
          "description": "The unique, token generated to validate user and get data.",
          "type": "string",
          "default":"eyJ1c2VySWQiOiJDSEFJVEFMSSIsInB1YmxpY0tleSI6IjMwNjQ0NzAwMzdlOGM1NzciLCJpYXQiOjE1NTI0NTc0NjIsImV4cCI6MTU1MjU0Mzg2Mn0"
        },
        "clientID": {
          "name": "clientID",
          "in": "body",
          "description": "Uniquely identifies the user",
          "type": "string",
          "default":"SYMP"
        },
        "isTradeSymbol": {
          "name": "isTradeSymbol",
          "in": "body",
          "required": false,
          "description": "if true send exchangeInstrumentID like 'ACC-EQ', if false send exchangeInstrumentID like '22'",
          "type": "boolean",
          "default":"false"
        },
        "instruments": {
          "name": "instruments",
          "in": "body",
          "description": "Instruments client wants to UnSubscribe",
          "required": true,
          "type": "object",
          "schema": {
            "properties": {
              "exchangeSegment": {
                "type": "integer",
                "description": "{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3,\"BSECM\": 11, \"BSEFO\": 12} It is segment, which represents cash, derivative, commodity or currency market."
              },
              "exchangeInstrumentID": {
                "type": "integer",
                "description": "Instrument Unique ID"
              }
            }
          }
        },
        "SubscribeInstruments": {
          "name": "instruments",
          "in": "body",
          "description": "Instruments client wants to Subscribe",
          "required": true,
          "type": "object",
          "schema": {
            "properties": {
              "exchangeSegment": {
                "type": "integer",
                "description": "{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3,\"BSECM\": 11, \"BSEFO\": 12} It is segment, which represents cash, derivative, commodity or currency market."
              },
              "exchangeInstrumentID": {
                "type": "integer",
                "description": "Instrument Unique ID"
              }
            }
          }
        },
        "marketDataPort": {
          "name": "marketDataPort",
          "in": "body",
          "description": "<b>Possible values:</b> <br/>1501: Touchline <br/>1502: Market Data <br/>1505: Candle Data <br/>1510: OpenInterest<br/>1512: LTP Data",
          "type": "integer",
          "default":1502
        },
        "quoteDataPort": {
          "name": "marketDataPort",
          "in": "body",
          "description": "<b>Possible values:</b> <br/>1501: Touchline <br/>1502: Market Data <br/>1510: OpenInterest<br/>1512: LTP Data",
          "type": "integer",
          "default":1502
        },
        "subscriptionMarketDataPort": {
          "name": "marketDataPort",
          "in": "body",
          "description": "<b>Possible values:</b> <br/>1501: Touchline <br/>1502: Market Data <br/>1505: Candle Data <br/>1510: OpenInterest<br/>",
          "type": "integer",
          "default":1502
        },
        "UnsubscriptionMarketDataPort": {
          "name": "marketDataPort",
          "in": "body",
           "description": "<b>Possible values:</b> <br/>1501: Touchline <br/>1502: Market Data <br/>1505: Candle Data <br/>1510: OpenInterest<br/>",
          "type": "integer",
          "default":1502
        },
        "publishFormat": {
          "name": "publishFormat",
          "in": "body",
          "description": "It's type of format in which result will be publish i.e. JSON , Binary ",
          "type": "string",
          "default":"JSON"
        },
        "instrumentsPara": {
          "type": "object",
          "required":[
            "exchangeSegment","exchangeInstrumentID"
          ],
          "properties":{
            "exchangeSegment": {
              "type": "integer",
              "description": "{\"NSECM\": 1, \"NSEFO\": 2, \"NSECD\": 3,\"BSECM\": 11, \"BSEFO\": 12} It is segment, which represents cash, derivative, commodity or currency market.",
              "default":1
            },
            "exchangeInstrumentID": {
              "type": "Any",
              "description": "Instrument Unique ID or symbol i.e.'ACC-EQ' ",
              "default":22
            }
          }
        }
      },
      "headers": {
        "Response-Type": {
          "description": "Response for request",
          "type": "string",
          "default":"success"
        },
        "Response-Code": {
          "description": "Response code to user request",
          "type": "string",
          "default":"s-response-0001"
        },
        "Response-Description": {
          "type": "string"
        },
        "Response-Result": {
          "description": "Result of valid login",
          "type": "string"
        }
      },
      "requestBodies": {},
      "securitySchemes": {
        "JWT": {
          "description": "You can create a JSON Web Token (JWT) via [JWT Session resource](XTS-Resource).\nUsage format: `Bearer <JWT>`\n",
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        },
        "PublishableApiKey": {
          "description": "Only for the Tokens resource.\nYou can create a Publishable API Key via our [API Keys resource](XTS-Resource), by specifying the type as `publishable`.\n",
          "name": "Authorization",
          "type": "apiKey",
          "in": "header"
        }
      }
    }
  }